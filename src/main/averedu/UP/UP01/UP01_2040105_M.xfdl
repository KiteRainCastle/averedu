<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1640" height="800" titletext="교직적성및인성검사 신청기간관리" onload="form_onload" onclose="form_onclose">
    <Layouts>
      <Layout height="800" width="1640">
        <Div id="divSearch" taborder="0" left="0" top="0" height="42" cssclass="div_WF_SearchBox" text="" right="0">
          <Layouts>
            <Layout>
              <Static id="stc_01_00" taborder="1" left="0" top="9" height="22" text="년도" cssclass="sta_WF_SearchLbl" width="50" textAlign="right"/>
              <Static id="Static01_02_00" taborder="0" text="27" left="0" top="0" width="27" height="42" cssclass="sta_GU_space" visible="false" background="aqua" opacity="0.5" textAlign="center" wordWrap="char"/>
              <Static id="Static01_02_00_00_00" taborder="2" text="10" left="50" top="0" width="10" height="42" cssclass="sta_GU_space" visible="false" background="aqua" opacity="0.5" textAlign="center" wordWrap="char"/>
              <Static id="Static01_01_00_00_01" taborder="3" text="9" left="0" top="0" width="1640" height="9" cssclass="sta_GU_space" visible="false" background="aqua" opacity="0.5" textAlign="center" wordWrap="char" font="normal 8pt/normal &quot;Arial&quot;"/>
              <Static id="Static01_01_00" taborder="4" text="9" left="0" top="32" width="1640" height="9" cssclass="sta_GU_space" visible="false" background="aqua" opacity="0.5" textAlign="center" wordWrap="char" font="normal 9pt/normal &quot;Arial&quot;"/>
              <Spin id="spnSearchYYYY" taborder="5" left="60" top="9" width="120" height="22" onkeydown="divSearch_spnSearchYYYY_onkeydown"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="Static01_00" taborder="1" text="↑&#13;&#10;35&#13;&#10;↓" left="800" top="42" height="35" cssclass="sta_GU_space" visible="false" background="aqua" opacity="0.5" textAlign="center" wordWrap="char" font="normal 7pt/normal &quot;Arial&quot;" width="35"/>
        <Static id="stRowCnt" taborder="2" text="[총 &lt;fc v='red'&gt;&lt;b v='true'&gt;0 &lt;/b&gt;&lt;/fc&gt;건]" left="140" top="48" height="24" usedecorate="true" width="200"/>
        <Static id="stc_09_00" taborder="3" left="0" top="45" height="31" cssclass="sta_WF_Title02" width="140" text="신청기준정보 목록"/>
        <Static id="Static01_01_00_00_00" taborder="4" text="8" left="0" top="69" width="1640" height="8" cssclass="sta_GU_space" visible="false" background="aqua" opacity="0.5" textAlign="center" wordWrap="char" font="normal 8pt/normal &quot;Arial&quot;"/>
        <Grid id="grdMaster" taborder="5" binddataset="dsMaster" autoenter="select" autofittype="col" onheadclick="grdMaster_onheadclick" onheaddblclick="grdMaster_onheaddblclick" left="0" top="77" bottom="0" cellsizingtype="col" autoupdatetype="itemselect" cellclickbound="cell" onselectchanged="grdMaster_onselectchanged" right="0" onexpandup="grdMaster_onexpandup">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="40"/>
                <Column size="40"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="150"/>
                <Column size="150"/>
                <Column size="85"/>
              </Columns>
              <Rows>
                <Row size="30" band="head"/>
                <Row size="30"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkboxcontrol"/>
                <Cell col="1" text="No"/>
                <Cell col="2" text="년도"/>
                <Cell col="3" text="회차"/>
                <Cell col="4" text="신청기간From"/>
                <Cell col="5" text="신청기간To"/>
                <Cell col="6" text="현재신청여부"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkboxcontrol" edittype="checkbox" text="bind:CHK" editmaxlength="1"/>
                <Cell col="1" expr="expr:(dataset.getRowType(currow)) == '2' ? '+':(dataset.getRowType(currow)) == '4' ? 'U':currow+1"/>
                <Cell col="2" text="bind:YYYY"/>
                <Cell col="3" text="bind:HOECHA" edittype="text" editinputtype="digit"/>
                <Cell col="4" text="bind:FR_DT" displaytype="calendarcontrol" edittype="date" calendardateformat="yyyy-MM-dd" calendardisplaynulltype="none"/>
                <Cell col="5" text="bind:TO_DT" edittype="date" displaytype="calendarcontrol" calendardateformat="yyyy-MM-dd" calendardisplaynulltype="none"/>
                <Cell col="6" text="bind:HYEONJAE_YN" displaytype="checkboxcontrol" edittype="checkbox"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/**********************************************************************
* FormID(화면   ID명): UP01_2040105_M.xfdl(교직적성및인성검사 신청기간관리)
* 작 성         일 명: 정진호
* 작 성         일 자: 2022/08/18
* 변 경         일 자:
* 변 경         자 명:
* 변경 및 수정 로그 : 일자별로 변경자 및 변경사항을 간략히 기술
*/
/**********************************************************************
        01. 전처리 공통 함수 선언
***********************************************************************/
/**********************************************************************
        02. 폼 변수 정의
***********************************************************************/
this.lvchkColidDs	= "YYYY$HOECHA"; // 필수 입력사항 칼럼ID  예) "commSmcd$commName"
this.lvchkColNameDs = "년도$회차";

/**********************************************************************
        03. 폼 로드 및 닫을때(폼이 포커스 갈때)
***********************************************************************/
/**
 * 기능 : 폼 로드 완료후 초기값 Setting
 */
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo) {
    //폼에 공통으로 로드시 사용하는 함수.
    this.gfn_formOnload(obj.e);
    //사용자 화면  초기화 함수
    this.fn_formInit();
};

/**********************************************************************
        04. 공통 코드 및 콤보 데이타 조회
***********************************************************************/
this.fn_formInit = function() {
	// 기준연도학기 
    var strDs			= "dsBaseYyyyHakgi"; // 데이터를 받을 데이터셋리스트     예) "dsBaseYyyyHakgi"
    var svcId    		= "baseYyyyHakgiInit";
	var strEopmuGbcd 	= "US";
	var strUseYn     	= "1";
    // gfn_BaseYyyyHakgiLoad(데이터셋, svcId , 업무구분, 사용구분);
    // 서비스 ID : 코드 조회 실행 후 CALLBACK 함수 지정.
    this.gfn_BaseYyyyHakgiLoad(strDs, svcId, strEopmuGbcd, strUseYn);
							  
    var strDs    = "dsUserYn|dsGUserYn";	// 데이터를 받을 데이터셋리스트     예) "DS_CODE01|DS_CODE02|DS_CODE03"
    var strLgcd  = "00801|00801"; 			// 공통코드 중분류 코드, 데이터셋 개수와 같아야 한다. 예) "Z01|Z02|Z03"
    var strComb  = "T|X"; 					// 콤보옵션 (T:전체, S:선택, N:공백, X:해당사항없음)
    var strOptn  = ""; 						// 조건문 " AND COMM_IT02 = '" + vip + "'|||";
    var svcId    = "Init";
	// gfn_CmmnMultiComboLoad(데이터셋 리스트, 대분류코드 , 콤보 옵션);
	// 서비스 ID : 코드 조회 실행 후 CALLBACK 함수 지정.
    this.gfn_CmmnMultiComboLoad(strDs, strLgcd, strComb, strOptn, svcId);
};

this.fn_PostBaseYyyyHakgiInit = function() {
	if (this.dsBaseYyyyHakgi.rowcount > 0) {
		this.ds_input.setColumn(0, "YYYY", this.dsBaseYyyyHakgi.getColumn(0, "YYYY"));
	}
};

/**
 * 기능 : 콜백함수(후처리)
 */
this.fn_callBack = function(sSvcId,nErrorCode, sErrorMsg) {
    this.gfn_clearSortAll(this.grdMaster);
    if(nErrorCode != 0) {
        this.gfn_alert(sErrorMsg,"에러정보","","error");
        return false;
    } else {
        /*sSvcId (Transaction Id)*/
        switch(sSvcId) {
            case "Init":
				this.fn_PostformInit();
                break;
            case "singleInit":
				this.fn_PostSingleInt();
                break;
            case "Ret":
				this.fn_PostRet();
                break;
            case "Save":
				this.fn_PostSave();
                break;
            case "New":
				this.fn_PostNew();
                break;
            case "Del":
				this.fn_PostDel();
                break;
			case "baseYyyyHakgiInit":
				this.fn_PostBaseYyyyHakgiInit();
			    break;
            default:
                break;
        }
    }
};

/************************************************************************************************;
 * 공통 버튼 호출 영역(공통버튼 사용에만사용);
 ************************************************************************************************/;
/*;
 * _gfn_btnClick여기서 호출시 버튼을 클릭처릭(개인폼에 모든스크립터 복사함);
 */;
this.fn_cmmBtnClick = function(sBtn) {
    switch(sBtn) {
        case "ret" :        // 조회
			this.fn_Ret();
            break;
        case "new" :         // 신규
			this.fn_New();
            break;
        case "del" :         // 삭제
			this.fn_Del();
            break;
        case "save" :        // 저장
			this.fn_Save();
            break;
        case "tmp1" :        // 팁
			 this.fn_Tip();
            break;
        default :
            break;
    };
};;

/**********************************************************************
        05. 조회 함수 선언(마스터 함수)
***********************************************************************/
/**
 * 기능 : 조회 전 실행
 */
this.fn_PreRet = function() {
    // 조회조건 셋팅
    return true;
};

/**
 * 기능 : 마스터 조회 실행
 */
this.fn_Ret = function() {
    if(!this.fn_PreRet()) {
        return false;
    }
    var strSvc      = "Ret";
    var strUrl      = "/prj/UP/UP01/Retrieve_2040105_MList.do";
    var strInDs     = "ds_input=ds_input";
    var strOutDs    = "dsMaster=dsMaster";
    var strArg      = "";
    var GBV_MENUID	= objApp.gv_cutPrgId;
    if(! this.gfn_isNull(this.gfn_trim(GBV_MENUID))) {
    	strArg += "GBV_MENUID=" + GBV_MENUID + " " + strArg;
    }
    var strCallBack = "fn_callBack";    //공백일시 기본 fn_callBack
    var strASync    = true;             //생략이나 공백일시에는 ASync=true,싱크시는 false로
    this.gfn_Transaction(strSvc, strUrl, strInDs, strOutDs, strArg, strCallBack, strASync);
};

/**
 * 기능 : 조회 후 실행
 */
this.fn_PostRet = function() {
    this.gfn_getRowCount(this.stRowCnt,this.dsMaster);
};

/**********************************************************************
        06. 추가 함수 선언
***********************************************************************/
/**
 * 기능 : 추가 전 실행(기본체크사항)
 */
this.fn_PreNew = function() {
    return true;
};

/**
 * 기능 : 마스터 추가 실행
 */
this.fn_New = function() {
    if(!this.fn_PreNew()) {
        return false;
    }
    var nRow = this.dsMaster.addRow();
    this.dsMaster.setColumn(nRow,"YYYY", this.divSearch.form.spnSearchYYYY.value);
};

/**
 * 기능 : 처리 후 실행
 */
this.fn_PostNew = function() {

};

/**********************************************************************
        07. 삭제 함수 선언
***********************************************************************/
/**
 * 기능 : 삭제 버튼 실행
 */
this.fn_PreDel = function() {
    //멀티삭제용도
    if(this.dsMaster.rowcount < 1 || this.dsMaster.findRow("CHK",1) == -1) {
        this.gfn_alert("삭제할 데이터가 없습니다.", "삭제정보", "", "warning");
        return false;
    }
	
    var result = this.gfn_confirm("현재선택행을 삭제하시겠습니까?", "삭제정보", "", "question");
    if(result == 0) {
        return false;
    }

    //다중삭제 용도
    this.dsMaster.set_enableevent(false);
    for(var i = this.dsMaster.rowcount - 1; i > -1; i--) {
        if(this.dsMaster.getColumn(i,"CHK") == "1" || this.dsMaster.getRowType(i) == 2) {
            this.dsMaster.deleteRow(i);
        }
    }
    this.dsMaster.set_enableevent(true);

    //개별삭제시
    //this.dsMaster.deleteRow(this.dsMaster.rowposition);
	
    return true;
};

/**
 * 기능 : Row 삭제 또는 Transaction 삭제 처리
 */
this.fn_Del = function() {
    if(!this.fn_PreDel()) {
        return false;
    }

    var strSvc      = "Del";
    var strUrl      = "/prj/UP/UP01/Delete_2040105_MList.do";
    var strInDs     = "dsMaster=dsMaster:u";
    var strOutDs    = "";
    var strArg      = "";
    var strCallBack = "fn_callBack";    //공백일시 기본 fn_callBack
    var strASync    = true;				//샏략이나 공백일시에는 ASync=true,싱크시는 false로
    this.gfn_Transaction(strSvc, strUrl, strInDs, strOutDs, strArg, strCallBack, strASync);
};

this.fn_PostDel = function() {
    this.gfn_getRowCount(this.stRowCnt,this.dsMaster);
};

/**********************************************************************
        08. 저장 함수 선언
***********************************************************************/
/**
 * 기능 : 저장 전 실행
 */
this.fn_PreSave = function() {
    if(this.dsMaster.rowcount > 0) {
        for(var i = 0; i < this.dsMaster.rowcount; i++) {
            if(this.dsMaster.getColumn(i, "CHK") == "0") {
                continue;
            }
			
            this.dsMaster.setColumn(i, "CHK", "0");
        }
    }

    if(!this.gfn_isUpdate(this.dsMaster)) {
        this.gfn_alert("변경된 이력이 없습니다.", "저장정보", "", "question");
        return false;
    }
	
	if(this.fn_compareSincheongDt() == false) {
		return false;
	}

    // 필수 입력사항 체크 =>grid 필수항목체크할거냐:true,일반 컴포넌트에 필수항목을 할거냐false)
    var chkFocusFlg = true;
    var result      = this.gfn_cmmnChkEssentialItem(this.dsMaster, this.lvchkColidDs, this.lvchkColNameDs, this.grdMaster, chkFocusFlg, this);
    if (result[0] != "success") {
        this.gfn_alert(result[0], "저장정보", "", "question");
        this.dsMaster.set_rowposition(result[1]); //데이터셋 변경
        return false;
     }

     var result = this.gfn_confirm("저장 하시겠습니까?", "저장", "", "question");
     if(result == 0) {
         return false;
     }
	 
     return true;
};

/**
 * 기능 : 저장 실행
 */
this.fn_Save = function() {
    if(!this.fn_PreSave()) {
        return false;
    }

    var strSvc      = "Save";
    var strUrl      = "/prj/UP/UP01/Save_2040105_MList.do";
    var strInDs     = "ds_input=ds_input:a ";
        strInDs    += "dsMaster=dsMaster:u";
    var strOutDs    = "dsMaster=dsMaster";
    var strArg      = "";
    var GBV_MENUID	= objApp.gv_cutPrgId;
    if(! this.gfn_isNull(this.gfn_trim(GBV_MENUID))) {
    	strArg += "GBV_MENUID=" + GBV_MENUID + " " + strArg;
    }
    var strCallBack = "fn_callBack";    //공백일시 기본 fn_callBack
    var strASync    = true;             //샏략이나 공백일시에는 ASync=true,싱크시는 false로
    this.gfn_Transaction(strSvc, strUrl, strInDs, strOutDs, strArg, strCallBack, strASync);
};

/**
 *      기능 : 저장시 후처리
 */
this.fn_PostSave = function() {
    this.gfn_getRowCount(this.stRowCnt,this.dsMaster);
};

/**********************************************************************
        09. 초기화
***********************************************************************/
/**********************************************************************
        10. 출력 함수 선언
***********************************************************************/
/**********************************************************************
        11. ExcelDnwn 엑셀로 출력
***********************************************************************/
this.fn_Excel = function() {
    if(this.dsMaster.rowcount < 1) {
        this.gfn_alert("출력할 엑셀데이터가 없습니다.", "EXCEL 정보", "", "information");
        return false;
    }
	
    var result = this.gfn_confirm("Excel를 출력하시겠습니까?", "EXCEL 출력", "", "question");
    if(result == 0) {
       return false;
    }
	
    this.gfn_excelExport(this.grdList, "시트이름", "파일이름");
};

/**********************************************************************
        13. Get, Set Method
***********************************************************************/
/**********************************************************************
        14. 기타 Control Event
***********************************************************************/
/**
 *      그리드멀티 체크
 */
this.grdMaster_onheadclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo) {
    if(e.cell == this.grdMaster.getBindCellIndex("body", "CHK")) {
        this.gfn_checkAll(obj, e);
    }
};

/**
 *      그리드멀티 소트정열
 */
this.grdMaster_onheaddblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo) {
    if(e.cell != this.grdMaster.getBindCellIndex("body", "CHK") && e.cell != 1) {
        this.gfn_gridSort(obj, e);
    }
};

/**
  * 닫을시 사용자가 변경유무를 체크(공통처리)
 **/
this.fn_beforeclose = function() {
    //return this.gfn_isUpdate(this.dsMaster);
};

/**
  * 신청시작 일자와 신청종료일자 비교 함수
 **/
this.fn_compareSincheongDt = function () {
	var nRow = this.dsMaster.rowposition;
	var frDt = this.dsMaster.getColumn(nRow, "FR_DT");
	var toDt = this.dsMaster.getColumn(nRow, "TO_DT");
	
	if (frDt > toDt) {
		this.alert("'신청기간From' 보다 '신청기간To'이 빠릅니다.");
		return false;
	}
};

/**
 * 기능 : 팁 실행
 */
this.fn_Tip = function() {
	this.alert("도움말 준비중입니다.");
};

/**
 * 기능 : 엔터입력
 */
this.divSearch_spnSearchYYYY_onkeydown = function(obj:nexacro.Spin,e:nexacro.KeyEventInfo) {
	//13(Enter) 누르면 조회
	if(e.keycode == 13) {
		this.ds_input.setColumn(0, "YYYY", obj.value);
		this.fn_Ret();
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsMaster" preload="true" updatecontrol="true" enableevent="true" useclientlayout="true" oncolumnchanged="dsMaster_oncolumnchanged">
        <ColumnInfo>
          <Column id="CHK" type="STRING" size="256"/>
          <Column id="YYYY" type="STRING" size="4"/>
          <Column id="HOECHA" type="STRING" size="1"/>
          <Column id="FR_DT" type="STRING" size="8"/>
          <Column id="TO_DT" type="STRING" size="8"/>
          <Column id="HYEONJAE_YN" type="STRING" size="1"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_input" oncolumnchanged="ds_input_oncolumnchanged">
        <ColumnInfo>
          <Column id="YYYY" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsBaseYyyyHakgi" useclientlayout="true">
        <ColumnInfo>
          <Column id="YYYY" type="STRING" size="256"/>
          <Column id="HAKGI" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.spnSearchYYYY" propid="value" datasetid="ds_input" columnid="YYYY"/>
    </Bind>
  </Form>
</FDL>
