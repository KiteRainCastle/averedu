<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="cmmMonthCalendar" width="106" height="22" titletext="공통월달력(MonthCalendar)" onload="form_onload">
    <Layouts>
      <Layout height="22" mobileorientation="landscape" width="106">
        <MaskEdit id="mae_monthCal" taborder="0" left="0" top="0" right="0" height="22" autoselect="true" format="####-##" type="string" limitbymask="integer" onkeydown="mae_monthCal_onkeydown" onkillfocus="mae_monthCal_onkillfocus"/>
        <Button id="btn_monthCal" taborder="1" top="0" height="22" right="0" width="22" onclick="btn_monthCal_onclick" font="bold 18px/normal &quot;Gulim&quot;" cssclass="btn_WF_ShuttleB"/>
        <PopupDiv id="pdv_monthCal" visible="false" left="0" top="22" width="201" height="175" cssclass="div_WF_ymCalSelect">
          <Layouts>
            <Layout>
              <Static id="sta_calendarYY" taborder="0" left="0" top="0" height="22" right="0" text="2017" background="#636363" textAlign="center" font="bold 12px/normal &quot;Gulim&quot;" color="#ffffff"/>
              <Button id="btn_next" taborder="1" top="0" width="22" height="22" right="0" onclick="pdv_monthCal_btn_next_onclick" cursor="pointer" cssclass="btn_WF_ShuttleR"/>
              <Button id="btn_pre" taborder="2" top="0" width="22" height="22" left="0" onclick="pdv_monthCal_btn_pre_onclick" cursor="pointer" cssclass="btn_WF_ShuttleL"/>
              <Button id="btn_month01" taborder="3" text="1월" left="0" top="22" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month02" taborder="4" text="2월" left="50" top="22" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month03" taborder="5" text="3월" left="100" top="22" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month04" taborder="6" text="4월" left="150" top="22" width="50" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month05" taborder="7" text="5월" left="0" top="73" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month06" taborder="8" text="6월" left="50" top="73" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month07" taborder="9" text="7월" left="100" top="73" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month08" taborder="10" text="8월" left="150" top="73" width="50" height="50" onclick="btn_month_onclick" cssclass="btn_WF_Crud" font="bold 12px/normal &quot;Gulim&quot;"/>
              <Button id="btn_month09" taborder="11" text="9월" left="0" top="124" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month10" taborder="12" text="10월" left="50" top="124" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month11" taborder="13" text="11월" left="100" top="124" width="49" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
              <Button id="btn_month12" taborder="14" text="12월" left="150" top="124" width="50" height="50" onclick="btn_month_onclick" font="bold 12px/normal &quot;Gulim&quot;" cssclass="btn_WF_Crud"/>
            </Layout>
          </Layouts>
        </PopupDiv>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/**
*  월달력
*  @MenuPath 
*  @FileName 		cmmMonthCalendar.xfdl 
*  @Creator 		jiback
*  @CreateDate 	    2017.12.26
*  @LastModifier  
*  @LastModifyDate  
*  @Version 		1.0
*  @Outline 		
*  @Desction   
************** 소스 수정 이력 *************************************************
*    date          		Modifier            Description
*******************************************************************************
*  2017.12.26     	     jgj	            최초 생성 
*******************************************************************************
*/

/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/
this.gfv_gFunctionName = ""; //값이 변경될때 호출할 함수명
this.gfv_sCallbackDef  = "";
this.gfv_sBeforeValue  = "";
this.gfv_sLimitMonth   = false;
this.gfv_strDateNew    = "";
//this.gfv_strDateNewNew;
//this.gfv_strDateNewOld;


/***********************************************************************************************
* FORM EVENT 영역(onload)
/***********************************************************************************************/
this.form_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	var objTarget = this.parent;
	this.gfv_gFunctionName = objTarget.callbackfunc;
	
    //현재 년월 초기값설정
    //mae_monthCal.value = gfn_toDay().substr(0, 6);
}

// function form_onsetfocus(obj:Form, e:SetFocusEventInfo)
// {
// 	this.setFocus();
// }

/**
 * @desc 달력 띄우기
 * @param obj Button
 * @param e ClickEventInfo
 */
this.btn_monthCal_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	var sVal = this.mae_monthCal.value;	
	
	if(!this.gfn_isNull(sVal))
	{
		
		sVal = nexacro.replaceAll(sVal," ","");
		if(sVal.length > 4)
		{
			if(sVal.toString().substr(4) > 12) 
			{
				this.gfn_alert( "1 ~ 12월만 가능합니다.");
				//this.mae_monthCal.set_value(sVal.toString().substr(0,4));
				this.mae_monthCal.set_value("");
				
				this.mae_monthCal.setFocus();
				this.mae_monthCal.setCaretPos(0);
				return;
			}
		}
	}else
	{
		this.mae_monthCal.set_value(this.gfn_getDate("date").substr(0, 6));
	}	
	
	var nX = system.clientToScreenX(this.mae_monthCal, 0) - system.clientToScreenX(nexacro.getApplication().mainframe, 0); 
	var nY = system.clientToScreenY(this.mae_monthCal, parseInt(this.mae_monthCal.height)) - system.clientToScreenY(nexacro.getApplication().mainframe, 0); 
	
	this._gfn_setCalendar(this._getValue());
	var nRtn = this.pdv_monthCal.trackPopup(nX,nY);	
	this.pdv_monthCal.form.btn_next.setFocus();
}

this.mae_monthCal_onkeydown = function(obj:MaskEdit, e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13 )
	{
		this.btn_monthCal_onclick();
	}
}

/**
 * 월 버튼 클릭시 날짜 선택
 * @param obj:nuButton
 * @param e:ClickEventInfo
 */
this.btn_month_onclick = function (obj:Button,  e:nexacro.ClickEventInfo)
{	
	var strYear	= this.gfv_strDateNew.substr(0, 4);
	var strText	= obj.text; 
		strText = strText.replace("월","");
		
	if (strText.length == 1) 
	{
		this.gfv_strDateNew = strYear+"0"+strText;
	}
	if( strText =="0 month")
	{ 
		this.gfv_strDateNew = strYear+"00";
	} else if(strText.length > 1)
	{
		this.gfv_strDateNew = strYear+strText;
	}
	
	this.pdv_monthCal.closePopup();
	
	this._setValue(this.gfv_strDateNew);
	
	if (!this.gfn_isNull(this.gfv_strDateNew) && !this.gfn_isNull(this.gfv_sCallbackDef)) 
	{
		//v_sBeforeValue = this.mae_monthCal.value;
		this.all[this.gfv_sCallbackDef]; //2015
	}
	
	this._callBindFunction(); // 함수호출
}

/**
 * 작년으로 이동
 * @param obj:Button
 * @param e:ClickEventInfo
 */
this.pdv_monthCal_btn_pre_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	var strYear	 = parseInt(this.gfv_strDateNew.substr(0, 4));
	var strMonth = this.gfv_strDateNew.substr(4, 2);
	
	strYear = strYear - 1;

	this.pdv_monthCal.form.sta_calendarYY.set_text(strYear);	
	this.gfv_strDateNew = strYear.toString() + strMonth;
	
	if(this.gfv_sLimitMonth){
		this._gfn_setmonthCal();
	}
}

/**
 * 내년으로 이동
 * @param obj:Button
 * @param e:ClickEventInfo
 */
this.pdv_monthCal_btn_next_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	var strYear	= parseInt(this.gfv_strDateNew.substr(0, 4));
	var strMonth = this.gfv_strDateNew.substr(4, 2);
	
	strYear = strYear + 1;

	this.pdv_monthCal.form.sta_calendarYY.set_text(strYear);
	this.gfv_strDateNew = strYear.toString() + strMonth;
	
	if(this.gfv_sLimitMonth){
		this._gfn_setMonthCal();
	}
}

/************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/

/**
 * @desc 년월값이 맞는지 검증
 * @param strYYMM 비교할 값
 * @return 체크한값
 */
this._checkDate = function (strYYMM)
{
	// 년월의 값은 6자리로 제한.
	if (strYYMM == null) strYYMM = "";
	if (strYYMM.length != 6) strYYMM = "";
	
	var strYear	= strYYMM.substr(0, 4);
	var strMonth = parseInt(strYYMM.substr(4, 2));
	
	if (strMonth < 0 || strMonth >= 13) strYYMM = "";
	
	return strYYMM;
}

/**
 * @desc 값을 가지고 올때 연동해서 처리할 함수명을 설정
 * @param v_sCallbackInput 콜백함수설정

this._setCallback = function (v_sCallbackInput)
{
	this.gfv_sCallbackDef = v_sCallbackInput;
}
*/
 
/**
 * @desc 종료월 초기값 결정
 * @param strDateNew 초기값
 */ 
this._gfn_setCalendar = function (strDate)
{
	this.gfv_strDateNew = strDate;
	strDateOld 			= strDate;
	
	// 기본값 : 현재년월셋팅
	if(this.gfn_isNull(this.gfv_strDateNew) || this.gfv_strDateNew.length < 4) 
	{
		this.gfv_strDateNew = this.gfn_getDate("date").substr(0, 6);
	}

	var strYear	 = this.gfv_strDateNew.substr(0, 4);
	var strMonth = parseInt(this.gfv_strDateNew.substr(4, 2));

	this.pdv_monthCal.form.sta_calendarYY.set_text(strYear);

}

/**
 * @desc 값이 변경될때 마다 함수를 호출한다.
 */
this._callBindFunction = function ()
{

	this.gfv_strDateNew = this._getValue();
	
	if (!this.gfn_isNull(this.gfv_gFunctionName)) 
	{
		
		try 
		{
// 			var callBackFunc = "this.getOwnerFrame()."+this.gfv_gFunctionName+"(strDateNew)";
// 			trace("in >> "+ callBackFunc);
//  			eval(callBackFunc);
 			this.lookupFunc(this.gfv_gFunctionName).call(this.gfv_strDateNew);	
			
		} catch(e) 
		{
		}
	}
}

/**
 * @desc 달력을 읽기 전용으로 할것인지 여부 설정
 * @param isReadonly
 */
this._setReadonly = function (isReadonly)
{
	if (this.gfn_isNull(isReadonly)) 
	{
        isReadonly = true;
	}
	if (isReadonly) 
	{
	//	this.mae_monthCal.set_cssclass("msk_WF_Readonly");
		this.mae_monthCal.set_readonly(true);
		this.btn_monthCal.set_enable(false);
	} else 
	{
		//this.mae_monthCal.set_cssclass("");
		this.mae_monthCal.set_readonly(false);
		this.btn_monthCal.set_enable(true);
	}
}

/**
 * @desc 달력을 필수 전용으로 할것인지 여부 설정
 * @param isRequired
 */
this._setRequired = function(isRequired, strMsgKey)
{
	return;

	if (this.gfn_isNull(isRequired)) 
	{
        isRequired = true;
    }
// 	_required = isRequired;
// 	_msgkey = strMsgKey; 2015
	if (isRequired) 
	{
	//	this.mae_monthCal.set_cssclass("msk_WF_Essential");
	} else 
	{
		//this.mae_monthCal.set_cssclass("");
	}
}

/**
 * calendar 에 focus 를 지정하자.
 */
this._setFocus = function ()
{
	this.mae_monthCal.setFocus();
}

/**
 * @desc 달력 날짜 정합성 체크
 * @param strDateNew 입력받은 달력날짜
 */
this._getIsDate = function(strValue)
{
    //날짜가 4자리(MMdd), 8자리(yyyyMMdd)가 아닐 경우
	if (!(String(strValue).trim().length == 6)) return false;
    
    if (String(strValue).trim().length == 6) 
    {
        var nYear =  nexacro.toNumber(strValue.toString().substr(0,4));
        var nMonth = nexacro.toNumber(strValue.toString().substr(4,2));
        
        //입력받은 년월일이 값이 없을 경우
        if (this.gfn_isNull(nYear) || this.gfn_isNull(nMonth)) return false;
        
        //입력받은 월이 범위를 초과할 경우
        if (nMonth > 12 || nMonth < 1) return false;
    }
    
    return true;
}

this._getMaskLength = function(strValue)
{
    var strValue = new String(strValue);
	strValue = new String(strValue);
    if (strValue == null 
     || strValue == "null" 
     || strValue.trim().length <= 0 
     || escape(strValue) == "undefined")
    {
        return 0;
    } else 
    {
        return strValue.length;
    }
}

this._getValue = function()
{
	if(!this.gfn_isNull(this.mae_monthCal.value)){	
		var oParamData = this.mae_monthCal.value;
		return nexacro.replaceAll(oParamData, " " , "");	
	}else{
		return "";
	}	
}

this._setValue = function (strYYMM)
{
	this.mae_monthCal.set_value(this._checkDate(strYYMM)); 
}

this._clearValue = function ()
{
	this.mae_monthCal.set_value(""); 
}

this._enable = function(obj)
{
	if(obj){
		this.mae_monthCal.set_enable(true); 
		this.btn_monthCal.set_enable(true); 
	}else{
		this.mae_monthCal.set_enable(false); 
		this.btn_monthCal.set_enable(false);
	}
}

this._readonly = function (obj)
{
	if(obj){
		//this.mae_monthCal.set_cssclass("msk_WF_Readonly");
		this.mae_monthCal.set_readonly(true); 
		this.btn_monthCal.set_enable(false);
	}else{
		//this.mae_monthCal.set_cssclass("");
		this.mae_monthCal.readonly(false); 
		this.btn_monthCal.set_enable(true); 
	}
}

this._setMonth = function (ds)
{
	this.ds_enableMonth.copyData(ds);
	this.gfv_sLimitMonth = true;
}

function pdv_MonthCal_onpopup(obj:PopupDiv, e:EventInfo)
{
	if(this.gfv_sLimitMonth){	
		this._gfn_setMonthCal()
	}	
}

this._gfn_setMonthCal = function ()
{
	var strYear = this.gfv_strDateNew.substr(0, 4);
	for(var i=1; i<=12;i++) {
				
		var strMonth = this.gfn_lpad(String(i), "0", 2);
		var sEnableMonth = this.ds_enableMonth.findRow(0,String(strYear+strMonth));
		var strBtnMonth = this.all["pdv_monthCal.btn_Month"+String(strMonth)];
				
		if(sEnableMonth >= 0 ){
			strBtnMonth.set_enable(true);
			
		}else{
			strBtnMonth.set_enable(false);
		}
		
	}
}

this.mae_monthCal_onkillfocus = function(obj:MaskEdit, e:nexacro.KillFocusEventInfo)
{
	if(!this.gfn_isNull(obj.value)){
		if(obj.value.length == 6){
			if(obj.value.toString().substr(4) > 12) {
				this.gfn_alert("1 ~ 12월만 가능합니다.");
				this.mae_monthCal.set_value(obj.value.toString().substr(0,4));
				
				this.mae_monthCal.setFocus();
				this.mae_monthCal.setCaretPos(5);
				return;
			}
		}
	}
}
]]></Script>
    <Objects>
      <Dataset id="ds_enableMonth"/>
    </Objects>
  </Form>
</FDL>
