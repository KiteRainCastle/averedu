<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="NDSYS210M" classname="NDSYS210M" left="0" top="0" width="1045" height="701" titletext="제너레이터1.1(vo버전)" onload="form_onload" onclose="form_onclose" oninit="NDSYS210M_oninit" style="font:9 돋움;">
    <Layouts>
      <Layout>
        <GroupBox id="GroupBox00" left="5" top="2" height="92" right="1" style="background:aliceblue;border:1 solid #6b6b6bff ;"/>
        <Grid id="Grid00" taborder="1" useinputpanel="false" left="2" top="165" width="308" binddataset="DS_Master" bottom="5" cellsizingtype="col">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="40"/>
                <Column size="115"/>
                <Column size="160"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell/>
                <Cell col="1" text="tableName"/>
                <Cell col="2" text="comments"/>
              </Band>
              <Band id="body">
                <Cell text="expr:currow+1"/>
                <Cell col="1" style="align:left;" text="bind:tableName"/>
                <Cell col="2" style="align:left;" text="bind:comments"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Combo id="cbUsers" taborder="2" left="5" top="106" width="303" height="24" innerdataset="@dsOwer" codecolumn="code" datacolumn="name" onitemchanged="cbUsers_onitemchanged"/>
        <Combo id="cbUsers01" taborder="5" innerdataset="@ds2Depth" codecolumn="CODE" datacolumn="NAME" onitemchanged="cbUsers01_onitemchanged" left="64" top="10" width="130" height="22" index="0" value="system" text="system" visible="true"/>
        <Edit id="edPath00" taborder="6" left="260" top="8" width="118" height="22" style="background:#ffffffff;border:1 solid #808080ff ;" onchar="edPath00_onchar" enable="false"/>
        <Edit id="edPath" taborder="7" left="95" top="35" width="171" height="24" oneditclick="edPath_oneditclick" style="background:#ffffffff;"/>
        <Button id="Search" taborder="8" text="조회" top="6" width="74" height="25" onclick="Search_onclick" right="11"/>
        <Static id="Static08" taborder="9" text="업무명 :" left="1081" top="36" width="82" height="18" cssclass="sta_WF_SchTitle" visible="false"/>
        <Static id="Static10" taborder="10" text="업무명 :" left="9" top="13" width="47" height="23" cssclass="sta_WF_SchTitle" visible="true"/>
        <Static id="Static11" taborder="11" text="작업명 :" left="201" top="9" width="52" height="23" cssclass="sta_WF_SchTitle"/>
        <Static id="Static00" taborder="12" text="Package경로 :" left="10" top="36" width="86" height="23" cssclass="sta_WF_SchTitle"/>
        <Static id="Static01" taborder="13" text="클래스메인명" left="385" top="10" width="77" height="23" cssclass="sta_WF_SchTitle"/>
        <Static id="Static02" taborder="14" text="글래스확장명 :" left="725" top="10" width="84" height="23" cssclass="sta_WF_SchTitle"/>
        <Edit id="edWorkName" taborder="15" left="466" top="8" width="245" height="22"/>
        <Edit id="edWorkName1" taborder="16" left="815" top="9" width="132" height="21"/>
        <Static id="Static03" taborder="17" text="Contoller :" left="268" top="37" width="82" height="23" cssclass="sta_WF_SchTitle"/>
        <Static id="Static05" taborder="18" text="Service :" left="530" top="35" width="51" height="23" cssclass="sta_WF_SchTitle"/>
        <Edit id="edController" taborder="19" left="333" top="36" width="174" height="23"/>
        <Edit id="edService" taborder="20" left="593" top="36" width="172" height="23"/>
        <Static id="Static07" taborder="21" text="ServiceImpl :" left="775" top="35" width="97" height="23" cssclass="sta_WF_SchTitle"/>
        <Edit id="edServiceImpl" taborder="22" left="850" top="34" width="182" height="23"/>
        <Static id="Static09" taborder="23" text="Dao         :" left="10" top="65" width="64" height="23" cssclass="sta_WF_SchTitle"/>
        <Edit id="edDao" taborder="24" left="95" top="64" width="171" height="23"/>
        <Static id="Static04" taborder="25" text="Mybits :" left="268" top="64" width="67" height="23" cssclass="sta_WF_SchTitle"/>
        <Edit id="edRetrieve" taborder="26" left="333" top="64" width="174" height="23"/>
        <Static id="Static06" taborder="27" text="DbXml :" left="533" top="66" width="46" height="23" cssclass="sta_WF_SchTitle"/>
        <Edit id="edXPlatForm" taborder="28" left="593" top="63" width="172" height="23"/>
        <Tab id="tbMain" taborder="29" left="315" top="106" tabindex="0" scrollbars="autoboth" right="0%" bottom="5">
          <Tabpages>
            <Tabpage id="tbSub1" text="Tab" scrollbars="none">
              <Layouts>
                <Layout>
                  <Grid id="gd_Detail" taborder="0" binddataset="DS_Detail" scrollbars="autovert" useinputpanel="false" cellsizingtype="col" right="5" bottom="5" left="5" top="5" style="font:9 돋움체;">
                    <Formats>
                      <Format id="default">
                        <Columns>
                          <Column size="40"/>
                          <Column size="93"/>
                          <Column size="219"/>
                          <Column size="111"/>
                          <Column size="80"/>
                          <Column size="80"/>
                          <Column size="80"/>
                          <Column size="167"/>
                        </Columns>
                        <Rows>
                          <Row size="24" band="head"/>
                          <Row size="24"/>
                        </Rows>
                        <Band id="head">
                          <Cell text="No."/>
                          <Cell col="1" text="컬럼ID"/>
                          <Cell col="2" text="컬럼명"/>
                          <Cell col="3" text="TYPE"/>
                          <Cell col="4" text="NULL"/>
                          <Cell col="5" text="PK"/>
                          <Cell col="6" text="DEFAULT"/>
                          <Cell col="7" text="엑셀임시설명"/>
                        </Band>
                        <Band id="body">
                          <Cell text="expr:currow+1"/>
                          <Cell col="1" edittype="normal" style="align:left;" text="bind:columnName"/>
                          <Cell col="2" displaytype="text" edittype="normal" style="align:left;" text="bind:comments"/>
                          <Cell col="3" text="bind:vwDataType"/>
                          <Cell col="4" text="bind:colNull"/>
                          <Cell col="5" text="bind:colPk"/>
                          <Cell col="6" displaytype="text" text="bind:colDef"/>
                          <Cell col="7" displaytype="text" edittype="text" text="bind:remkText"/>
                        </Band>
                      </Format>
                    </Formats>
                  </Grid>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tbSub3" text="Controller" scrollbars="none">
              <Layouts>
                <Layout>
                  <TextArea id="taContoller" taborder="0" scrollbars="autoboth" oneditclick="tbMain_tbSub2_taNavigation_oneditclick" left="0" top="0" right="0" bottom="0" style="color:black;font:9 돋움체;"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tbSub4" text="Service" scrollbars="none">
              <Layouts>
                <Layout>
                  <TextArea id="taSarvice" taborder="0" oneditclick="tbMain_tbSub2_taNavigation_oneditclick" left="6" top="4" right="0" bottom="0" style="color:black;font:9 돋움체;"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tbSub5" text="ServiceImpl" scrollbars="none">
              <Layouts>
                <Layout>
                  <TextArea id="taServiceImpl" taborder="0" scrollbars="autoboth" oneditclick="tbMain_tbSub2_taNavigation_oneditclick" left="5" top="4" style="color:black;font:9 돋움체;" right="0" bottom="0"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tbSub6" text="Dao" scrollbars="none">
              <Layouts>
                <Layout>
                  <TextArea id="taDao" taborder="0" scrollbars="autoboth" left="6" top="4" style="color:black;font:9 돋움체;" right="0" bottom="0"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tbSub7" text="MyQry" scrollbars="none">
              <Layouts>
                <Layout>
                  <TextArea id="taXmlquery" taborder="0" scrollbars="autoboth" oneditclick="tbMain_tbSub2_taNavigation_oneditclick" left="6" top="4" style="color:black;font:9 돋움체;" right="0.58%" bottom="0.8%"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tbSub8" text="XOracle(관리자)" scrollbars="none">
              <Layouts>
                <Layout>
                  <TextArea id="taXOracle" taborder="0" scrollbars="autoboth" left="6" top="4" style="color:black;font:9 돋움체;" right="0%" bottom="0%"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tbSub9" text="Nexacro" scrollbars="none">
              <Layouts>
                <Layout>
                  <TextArea id="taPID" taborder="1" left="8" top="5" position="fixed" lengthunit="utf8" right="0%" bottom="0" style="color:black;font:9 돋움체;"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="tbSub10" text="VO" scrollbars="none">
              <Layouts>
                <Layout>
                  <TextArea id="taVo" taborder="0" scrollbars="autoboth" readonly="true" left="4" top="3" style="background:white;border:1 solid #808080ff ;color:black;font:9 돋움체;" right="0.58%" bottom="0.8%"/>
                </Layout>
              </Layouts>
            </Tabpage>
          </Tabpages>
        </Tab>
        <Button id="btExcel" taborder="30" text="엑셀다운로드" top="106" width="75" height="25" onclick="btExcel_onclick" right="8"/>
        <Static id="Static12" taborder="32" text="필터" left="8" top="136" width="42" height="23" style="padding:0 0 0 0;align:center middle;" cssclass="sta_WF_SchTitle"/>
        <Edit id="edRetrieve00" taborder="33" left="50" top="135" width="260" height="24" onkeydown="edRetrieve00_onkeydown" imemode="alpha" inputmode="upper"/>
        <Static id="Static13" taborder="34" text="VO :" cssclass="sta_WF_SchTitle" left="781" top="66" width="46" height="23"/>
        <Edit id="edVo" taborder="35" left="851" top="63" width="181" height="23"/>
        <Combo id="cbUsers00" taborder="36" innerdataset="@ds1Depth" codecolumn="CODE" datacolumn="NAME" onitemchanged="cbUsers00_onitemchanged" left="1136" top="31" width="130" height="22" visible="false"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="DS_Master" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" onrowposchanged="DS_Master_onrowposchanged">
        <ColumnInfo>
          <Column id="comments" type="STRING" size="256"/>
          <Column id="rowNo" type="BIGDECIMAL" size="256"/>
          <Column id="tableName" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="DS_Detail" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="colDef" type="STRING" size="256"/>
          <Column id="colNo" type="STRING" size="256"/>
          <Column id="colNull" type="STRING" size="256"/>
          <Column id="colPk" type="STRING" size="256"/>
          <Column id="columnName" type="STRING" size="256"/>
          <Column id="comments" type="STRING" size="256"/>
          <Column id="dataLength" type="BIGDECIMAL" size="256"/>
          <Column id="dataType" type="STRING" size="256"/>
          <Column id="ord" type="STRING" size="256"/>
          <Column id="remkText" type="STRING" size="256"/>
          <Column id="vwDataType" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsOwer" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="STRING" size="32"/>
          <Column id="name" type="STRING" size="32"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds1Depth" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">adm</Col>
            <Col id="NAME">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">stu</Col>
            <Col id="NAME">sut</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds2Depth" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="LEVEL" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">acc</Col>
            <Col id="NAME">acc</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">aprvl</Col>
            <Col id="NAME">aprvl</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">aprvlln</Col>
            <Col id="NAME">aprvlln</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">basicmsg</Col>
            <Col id="NAME">basicmsg</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">code</Col>
            <Col id="NAME">code</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="LEVEL">adm</Col>
            <Col id="CODE">comm</Col>
            <Col id="NAME">comm</Col>
          </Row>
          <Row>
            <Col id="CODE">depos</Col>
            <Col id="NAME">depos</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">login</Col>
            <Col id="NAME">login</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">menu</Col>
            <Col id="NAME">menu</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">pbldirector</Col>
            <Col id="NAME">pbldirector</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">pblretn</Col>
            <Col id="NAME">pblretn</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">prod</Col>
            <Col id="NAME">prod</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">regsvtim</Col>
            <Col id="NAME">regsvtim</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">reguser</Col>
            <Col id="NAME">reguser</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">seizure</Col>
            <Col id="NAME">seizure</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">sp</Col>
            <Col id="NAME">sp</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">sportamt</Col>
            <Col id="NAME">sportamt</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">sportamtadm</Col>
            <Col id="NAME">sportamtadm</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">statistics</Col>
            <Col id="NAME">statistics</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">sysif</Col>
            <Col id="NAME">sysif</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">test</Col>
            <Col id="NAME">test</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">trmnat</Col>
            <Col id="NAME">trmnat</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
          <Row>
            <Col id="CODE">user</Col>
            <Col id="NAME">user</Col>
            <Col id="LEVEL">adm</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_input" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="codeName" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code"/>
            <Col id="codeName"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_page">
        <ColumnInfo>
          <Column id="totalCount" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item1" compid="cbUsers" propid="value" datasetid="ds_input" columnid="code"/>
      <BindItem id="item0" compid="edRetrieve00" propid="value" datasetid="ds_input" columnid="codeName"/>
    </Bind>
    <Script type="xscript5.1"><![CDATA[/*
* FormID(화면 ID명)  : COMM000004S.xfdl( 개점/폐점 내역 조회/출력)
* 작 성		 일 명   : jiback
* 작 성	     일 자   : 2018/09/16
* 변 경		 일 자   :
* 변 경	     자 명   :
* 변경 및 수정 로그 : 일자별로 변경자 및 변경사항을 간략히 기술
*/
/**********************************************************************
	01. 전처리 공통 함수 선언 
***********************************************************************/
/**********************************************************************
	02. 폼 변수 정의 
***********************************************************************/
this.iFind              		= 0; // 처음 상세 리스트가 2번 조회 돼는것을 방지하기 위한 Flag
/**********************************************************************
	03. 폼 로드 및 닫을때(폼이 포커스 갈때)
***********************************************************************/
this.form_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	this.fn_Init();
}

this.fn_Init = function()
{
	
	this.edWorkName1.set_value("Master");
	
	var strSvc 			= "Init";                                       
	var strUrl 			= "/xbt/adm/sys/RetrieveGeneratorUser.do"; 
	var strInDs  		= "";                                        
	var strOutDs 		= "dsOwer=dsOwer";    
	var strArg 			= "";               
	var strCallBack 	= "fn_callBack";    //공백일시 기본 fn_callBack
	var strASync    	= true;			   //샏략이나 공백일시에는 ASync=true,싱크시는 false로 
	
	this.gfn_Transaction(strSvc
						, strUrl
						, strInDs
						, strOutDs
						, strArg
						, strCallBack
						, strASync);				
	
}

this.postInit = function()
{

	this.cbUsers00.set_value("adm");
    this.ds2Depth.filter("LEVEL == '" + this.cbUsers00.value + "'");
    
    this.cbUsers01.set_value("test");
    this.edPath00.set_value("test");

	this.edPath.set_value("kr.or.cssf.bass" + "." + this.edPath00.value);
    this.fn_costText();
	
	this.cbUsers.set_value("SCOTT");
	
	this.Search_onclick();

}

this.fn_costText = function()
{	
		
	this.edWorkName.set_value(this.fn_xmlFile2(this.cbUsers01.value));
	var strWork 	 = (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var strGroupName = (this.edWorkName.text).trim();
	
	
	this.edController.set_value(strWork + "Controller.java");
	this.edService.set_value(strWork + "Service.java");
	this.edServiceImpl.set_value(strWork + "ServiceImpl.java");
	this.edDao.set_value(strWork + "DAO.java");
	this.edRetrieve.set_value(strWork + ".xml");
	this.edXPlatForm.set_value(strWork + ".xfdl");
	this.edVo.set_value(strWork+ "VO.java");
}
/**********************************************************************
	04. 콜백함수(후처리) 
***********************************************************************/
this.fn_callBack = function(sSvcId,nErrorCode, sErrorMsg) 
{
	
	if(nErrorCode != 0)
	{
		this.alert(sErrorMsg);
		return false;
	}else
	{
		/*sSvcId (Transaction Id)*/
		switch(sSvcId)
		{
			case "Init":
				this.postInit();
				break;
			case "Search":
			    this.postSearch();
			  	break;
			case "DSearch":
			    this.postDSearch();
			  	break;
			case "Save":
			    this.postSave();
				break;
			case "Insert":
				this.postInsert();
				break;
			case "Delete":
				this.postDelete();
				break;
			default:
				break;
		}
	}
}
/**********************************************************************
	05. 조회 함수 선언  
***********************************************************************/
/**
 * 기능 : 조회 전 실행
 */
this.preSearch = function()
{ 
	return true;
}



this.Search_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(!this.preSearch())                                                
	{                                                             
		return false;                                               
	}  

	var strSvc 		= "Search";
	var strUrl 		= "/xbt/adm/sys/RetrieveGeneratorM.do";                                        
	var strInDs  	= "ds_input=ds_input";                                        
	var strOutDs 	= "DS_Master=DS_Master";    
	var strArg 		= "";               
	var strCallBack = "fn_callBack";    //공백일시 기본 fn_callBack
	var strASync    = true;			   //샏략이나 공백일시에는 ASync=true,싱크시는 false로 
	
	this.gfn_Transaction(strSvc
					   , strUrl
					   , strInDs
					   , strOutDs
					   , strArg
					   , strCallBack
					   , strASync);					   
		
}


this.postSearch = function()
{

	//trace(this.DS_Master.saveXML());
	this.DS_Master_onrowposchanged(this.DS_Master);
}
/**********************************************************************
	05-1. detail 조회 함수 선언  
***********************************************************************/
this.DS_Master_onrowposchanged = function(obj:Dataset, e:nexacro.DSRowPosChangeEventInfo)
{
	
	if(this.iFind == 1)
	{
		this.DSearch_OnClick();
	}
	this.iFind = 1;
	
}
/**
 * 기능 : 조회 전 실행
 */
this.preDSearch = function()
{ 
	return true;
}


this.DSearch_OnClick = function()
{
	if(!this.preDSearch())                                                
	{                                                             
	return false;                                               
	}      

					
	
	var strSvc 			= "DSearch";                                       
	var strUrl 			= "/xbt/adm/sys/RetrieveGeneratorD.do";
	var strInDs  		= "";                                        
	var strOutDs 		= "DS_Detail=DS_Detail";    
	var strArg 			= "tabbleName="	+ nexacro.wrapQuote(this.DS_Master.getColumn(this.DS_Master.rowposition,"tableName")); 
		strArg 	   	   += " code="		+ nexacro.wrapQuote(this.cbUsers.value); 
	var strCallBack    	= "fn_callBack";    //공백일시 기본 fn_callBack
	var strASync       	= true;			   //샏략이나 공백일시에는 ASync=true,싱크시는 false로 
	
	
	this.gfn_Transaction(strSvc
						, strUrl
						, strInDs
						, strOutDs
						, strArg
						, strCallBack
						, strASync);			   					

				
}
/**********************************************************************************************************************
* 공통으로 사용하는 Function
***********************************************************************************************************************/
/**
* 첫자 대문자 만들기 
*/
this.fn_xmlFile = function(FileName)
{
	var strXmlFile ="";
	strXmlFile = (FileName.substr(0,1)).toLowerCase() + FileName.substr(1);
	
	return strXmlFile;
}

this.fn_strColName = function(strCol)
{
	var strPCol  	= "";
	var arrCol	 	= strCol.split("_");
	var colCount 	= 0;
	colCount 	= arrCol.length;
	 
	if(colCount == 0)
	{
		strPCol =  strCol;
	
	}else
	{
		strPCol =  strCol;
		
		for(var i=0; i < colCount; i++)
		{
			if(i==0)
			{
				strPCol = arrCol[i];
			}else
			{
				strPCol +=  (arrCol[i].substr(0,1)).toUpperCase() + (arrCol[i].substr(1)).trim();
			}
		}
		
		
	}
	return strPCol;
}

this.PidFileName = function()
{
	
	var strPath 			= ((this.edPath.text).trim()).toLowerCase();
	var strMixmlFileNm 		= strPath.split(".");
	var strName 			= "";
	var strWork 			= (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	
	for(var i = 0; i<strMixmlFileNm.length ; i++)
	{
		if(strMixmlFileNm.length < 2)
		{
			this.alert("최소한 2레벨은 입력하셔야 합니다.ex)oem.xxx");
			
		}else
		{
			if(strMixmlFileNm.length==2)
			{
				strName = strMixmlFileNm[i].toLowerCase() + (this.edWorkName.text).trim();
			
			}else if(strMixmlFileNm.length==3)
			{
				if(i == 1)
				{
					strName = strMixmlFileNm[i].toLowerCase();
				
				}else if(i == 2)
				{
					strName += (strMixmlFileNm[i].toUpperCase()).substr(0,1) + strMixmlFileNm[i].substr(1) + (this.edWorkName.text).trim() + ".xml";
				}
			}
		}
	}
	
	return strName;
}


this.postDSearch = function()
{

	//trace(this.DS_Detail.saveXML());

	var strTableName 	= this.DS_Master.getColumn(this.DS_Master.rowposition, "tableName");
	var strWork 	 	= (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var strGroupName 	= (this.edWorkName.text).trim();
	
	this.edController.set_value(strWork + "Controller.java");
	this.edService.set_value(strWork + "Service.java");
	this.edServiceImpl.set_value(strWork + "ServiceImpl.java");
	this.edDao.set_value(strWork + "DAO.java");
	this.edRetrieve.set_value(strWork + ".xml");
	this.edXPlatForm.set_value(strWork + ".xfdl");
	this.edVo.set_value(strWork+ "VO.java");
	

	this.fn_taContorller();
	this.fn_taService();		
	this.fn_taServiceImpl();
	this.fn_taDao();
	this.fn_tbXmlquery(strTableName);
	this.fn_taXOracle(strTableName);
	this.fn_PidXml();
	this.fn_taVo();

	

}

/**********************************************************************************************************************
* 서버 프로세스 Navigation시작
***********************************************************************************************************************/
/**
* Devon Navigation Create()
* Contorler /입력/저장/수정/삭제
*/
this.fn_taContorller = function()
{
	var strContoller 	= "";
	var strGroup     	= (this.edWorkName.text).trim();
	var strMethod	  	= (this.edWorkName1.text).trim();
	var strWork 	  	= (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var strXpName    	= (strWork).trim() + "Controller";
	var strServiceName  = (strWork).trim() + "Service";
	var strServiceName1 = this.fn_xmlFile((strWork).trim()) + "Service";
	var dirPath         = this.gfn_trim(this.cbUsers01.value);
	
	var strPath      	= (this.edPath.text).trim();
	
	
	strContoller += "/*------------------------------------------------------------------------------  												\n";
	strContoller += " * NAME : " + strXpName + ".java                                                                    							\n";
	strContoller += " * DESC :                                                                                                          			\n";
	strContoller += " * VER  : V1.0                                                                                                     			\n";
	strContoller += " * PROJ : 자산형성지원 정보화 구축                                                   										\n";
	strContoller += " * Copyright 2017 Ready Korea All rights reserved                                                                      		\n";
	strContoller += " *------------------------------------------------------------------------------                                   			\n";
	strContoller += " *                               MODIFICATION LOG                                                                  			\n";
	strContoller += " *------------------------------------------------------------------------------                                   			\n";
	strContoller += " *    DATE     AUTHOR                      DESCRIPTION                        													\n";
	strContoller += " * ----------  ------  ---------------------------------------------------------                                   			\n";
	strContoller += " * 2017/08/03  jiback(이름)                                                                                         			\n";
	strContoller += " *------------------------------------------------------------------------------*/                                     		\n";
	strContoller += "package " + strPath + ".controller;                                                                             			\n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "import java.util.List;                                                                                                  		\n";
	strContoller += "import java.util.Map;                                                                                                  		\n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "import javax.servlet.http.HttpServletRequest;                                                                               	\n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "import " + strPath + ".service." + strServiceName + ";                                                        	\n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "import org.apache.commons.logging.Log;                                                                                     	\n";
	strContoller += "import org.apache.commons.logging.LogFactory;                                                                                 	\n";
	strContoller += "import org.springframework.beans.factory.annotation.Autowired;                                                                 \n";
	strContoller += "import org.springframework.stereotype.Controller;                                                                              \n";
	strContoller += "import org.springframework.ui.Model;                                                                                        	\n";
	strContoller += "import org.springframework.web.bind.annotation.RequestMapping;                                                                 \n";
	strContoller += "import org.springframework.web.servlet.ModelAndView;                                                                 \n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "import egovframework.rte.cmmn.ria.nexacro.NexacroConstant;                                                                    	\n";
	strContoller += "import egovframework.rte.cmmn.ria.nexacro.vo.NexacroObjectDTO;                                                                	\n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "@Controller                                                                                                            		\n";
	strContoller += "public class " + strXpName + " {                                                                                   			\n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "	 Log logger = LogFactory.getLog(this.getClass());                                                                 					\n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "    /** " + strServiceName +" */                                                                                             	\n";
	strContoller += "    @Autowired                                                      															\n";
	strContoller += "    " + strServiceName + " " + strServiceName1 + ";                                                                     		\n";
	strContoller += "                                                                                                                       		\n";
	strContoller += "    /**                                                                                                                		\n";
	strContoller += "	 * 제너레이터 마스터 리스트 조회(retrieve" + strWork + ")                                                                 	\n";
	strContoller += "	 * @param input                                                                                                 			\n";
	strContoller += "	 * @return                                                                                                      			\n";
	strContoller += "	 * @throws Exception                                                                                           				\n";
	strContoller += "	 */                                                                                                             			\n";
	strContoller += "	@RequestMapping(value = " + "\"" + "/" + dirPath + "/retrieve" + strWork + ".do" + "\"" + ")        								\n";
	strContoller += "	public ModelAndView retrieve" + strWork + "(NexacroObjectDTO nexaDto, Model model, HttpServletRequest request)throws Exception { \n";
	strContoller += "	 	                                                                                                        				\n";
	strContoller += "		ModelAndView mav = new ModelAndView(" + "\"" + "nexacroObjectView" + "\"" + ");                                        	\n";
	strContoller += "	                                                                                                                			\n";
	strContoller += "		try                                                                                                     				\n";
	strContoller += "	    {                                                                                                           			\n";
	strContoller += "			List tranInfo 						 = nexaDto.getTransInfo();                                     					\n";
	strContoller += "			Map <String, Object> inVar 			 = nexaDto.getInVariableMap();                                         			\n";
	strContoller += "			Map <String, List<Object>> inDataset = nexaDto.getInDataSetMap();                                  					\n";
	strContoller += "			Map <String, Object> outVar 		 = nexaDto.getOutVariableMap();                                      			\n";
	strContoller += "			Map <String, Object> outDataset 	 = nexaDto.getOutDataSetMap();                               					\n";
    strContoller += "		                                                                                                        				\n";
	strContoller += "			" + strServiceName1 + ".retrieve" + strWork + "(inVar, inDataset, outVar, outDataset);                              \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "			outDataset.put(NexacroConstant.TRAN_INFO_DATASET_NAME, tranInfo);                                                   \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "			mav.addObject(NexacroConstant.OUT_DATASET_ATT_NAME, nexaDto.getOutDataSetMap());                                	\n";
	strContoller += "			mav.addObject(NexacroConstant.OUT_VARIABLES_ATT_NAME, nexaDto.getOutVariableMap());                          		\n";
	strContoller += "			                                                                                                					\n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_CODE, " + "\"" + "0" + "\"" + ");                                               \n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_MSG, " + "\"" + "" + "\"" + ");                                                 \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "		} catch ( Exception e )                                                                                 				\n";
	strContoller += "		{                                                                                                       				\n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_CODE, " + "\"" + "-1" + "\"" + ");                                              \n";
	strContoller += "			mav.addObject( NexacroConstant.ERROR_MSG, e.getMessage());                                      				    \n";
	strContoller += "		}                                                                                                      					\n";
	strContoller += "		return mav;                                                                                             				\n";
	strContoller += "	}                                                                                                               			\n";
	strContoller += "    /**                                                                                                                		\n";
	strContoller += "	 * 제너레이터 템플릿 마스터 저장/수정(save" + strWork + ")                                                                 	\n";
	strContoller += "	 * @param input                                                                                                 			\n";
	strContoller += "	 * @return                                                                                                      			\n";
	strContoller += "	 * @throws Exception                                                                                           				\n";
	strContoller += "	 */                                                                                                             			\n";
	strContoller += "	@RequestMapping(value = " + "\"" + "/" + dirPath + "/save" + strWork + ".do" + "\"" + ")        								\n";
	strContoller += "	public ModelAndView save" + strWork + "(NexacroObjectDTO nexaDto, Model model, HttpServletRequest request)throws Exception { \n";
	strContoller += "	 	                                                                                                        				\n";
	strContoller += "		ModelAndView mav = new ModelAndView(" + "\"" + "nexacroObjectView" + "\"" + ");                                        	\n";
	strContoller += "	                                                                                                                			\n";
	strContoller += "		try                                                                                                     				\n";
	strContoller += "	    {                                                                                                           			\n";
	strContoller += "			List tranInfo 						 = nexaDto.getTransInfo();                                     					\n";
	strContoller += "			Map <String, Object> inVar 			 = nexaDto.getInVariableMap();                                         			\n";
	strContoller += "			Map <String, List<Object>> inDataset = nexaDto.getInDataSetMap();                                  					\n";
	strContoller += "			Map <String, Object> outVar 		 = nexaDto.getOutVariableMap();                                      			\n";
	strContoller += "			Map <String, Object> outDataset 	 = nexaDto.getOutDataSetMap();                               					\n";
    strContoller += "		                                                                                                        				\n";
	strContoller += "			" + strServiceName1 + ".save" + strWork + "(inVar, inDataset, outVar, outDataset);                              \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "			outDataset.put(NexacroConstant.TRAN_INFO_DATASET_NAME, tranInfo);                                                   \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "			mav.addObject(NexacroConstant.OUT_DATASET_ATT_NAME, nexaDto.getOutDataSetMap());                                	\n";
	strContoller += "			mav.addObject(NexacroConstant.OUT_VARIABLES_ATT_NAME, nexaDto.getOutVariableMap());                          		\n";
	strContoller += "			                                                                                                					\n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_CODE, " + "\"" + "0" + "\"" + ");                                               \n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_MSG, " + "\"" + "" + "\"" + ");                                                 \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "		} catch ( Exception e )                                                                                 				\n";
	strContoller += "		{                                                                                                       				\n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_CODE, " + "\"" + "-1" + "\"" + ");                                              \n";
	strContoller += "			mav.addObject( NexacroConstant.ERROR_MSG, e.getMessage());                                      				    \n";
	strContoller += "		}                                                                                                      					\n";
	strContoller += "		return mav;                                                                                             				\n";
	strContoller += "	}                                                                                                               			\n";
	strContoller += "    /**                                                                                                                		\n";
	strContoller += "	 * 제너레이터 템플릿 마스터 삭제(delete" + strWork + ")                                                                 	\n";
	strContoller += "	 * @param input                                                                                                 			\n";
	strContoller += "	 * @return                                                                                                      			\n";
	strContoller += "	 * @throws Exception                                                                                           				\n";
	strContoller += "	 */                                                                                                             			\n";
	strContoller += "	@RequestMapping(value = " + "\"" + "/" + dirPath + "/delete" + strWork + ".do" + "\"" + ")        								\n";
	strContoller += "	public ModelAndView delete" + strWork + "(NexacroObjectDTO nexaDto, Model model, HttpServletRequest request)throws Exception { \n";
	strContoller += "	 	                                                                                                        				\n";
	strContoller += "		ModelAndView mav = new ModelAndView(" + "\"" + "nexacroObjectView" + "\"" + ");                                        	\n";
	strContoller += "	                                                                                                                			\n";
	strContoller += "		try                                                                                                     				\n";
	strContoller += "	    {                                                                                                           			\n";
	strContoller += "			List tranInfo 						 = nexaDto.getTransInfo();                                     					\n";
	strContoller += "			Map <String, Object> inVar 			 = nexaDto.getInVariableMap();                                         			\n";
	strContoller += "			Map <String, List<Object>> inDataset = nexaDto.getInDataSetMap();                                  					\n";
	strContoller += "			Map <String, Object> outVar 		 = nexaDto.getOutVariableMap();                                      			\n";
	strContoller += "			Map <String, Object> outDataset 	 = nexaDto.getOutDataSetMap();                               					\n";
    strContoller += "		                                                                                                        				\n";
	strContoller += "			" + strServiceName1 + ".delete" + strWork + "(inVar, inDataset, outVar, outDataset);                              \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "			outDataset.put(NexacroConstant.TRAN_INFO_DATASET_NAME, tranInfo);                                                   \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "			mav.addObject(NexacroConstant.OUT_DATASET_ATT_NAME, nexaDto.getOutDataSetMap());                                	\n";
	strContoller += "			mav.addObject(NexacroConstant.OUT_VARIABLES_ATT_NAME, nexaDto.getOutVariableMap());                          		\n";
	strContoller += "			                                                                                                					\n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_CODE, " + "\"" + "0" + "\"" + ");                                               \n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_MSG, " + "\"" + "" + "\"" + ");                                                 \n";
	strContoller += "		                                                                                                        				\n";
	strContoller += "		} catch ( Exception e )                                                                                 				\n";
	strContoller += "		{                                                                                                       				\n";
	strContoller += "			mav.addObject(NexacroConstant.ERROR_CODE, " + "\"" + "-1" + "\"" + ");                                              \n";
	strContoller += "			mav.addObject( NexacroConstant.ERROR_MSG, e.getMessage());                                      				    \n";
	strContoller += "		}                                                                                                      					\n";
	strContoller += "		return mav;                                                                                             				\n";
	strContoller += "	}                                                                                                               			\n";
	strContoller += "}                                                                                                               			\n";
	
	
	this.tbMain.tbSub3.taContoller.set_value(strContoller);
	
}


/**********************************************************************************************************************
* 서버 프로세스 명령어 처리(입력/수정/삭제/저장) Cmd
***********************************************************************************************************************/
/**
* Devon RetrieveCmd Create()
* 조회 Service 자동생성기 
*/
this.fn_taService = function()
{
	var strService 	= "";
	var strGroup   	= (this.edWorkName.text).trim();
	var strMethod	= (this.edWorkName1.text).trim();
	var strWork 	= (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var strXpName  	= (strWork).trim() + "Service";
	var strPath    	= (this.edPath.text).trim();
	
	strService += "/*------------------------------------------------------------------------------  								\n";
	strService += " * NAME : " + strXpName + ".java                                                                    				\n";
	strService += " * DESC :                                                                                                        \n";
	strService += " * VER  : V1.0                                                                                                   \n";
	strService += " * PROJ : 자산형성지원 정보화 구축                                                   							\n";
	strService += " * Copyright 2017 Ready Korea All rights reserved                                                                \n";
	strService += " *------------------------------------------------------------------------------                                 \n";
	strService += " *                               MODIFICATION LOG                                                                \n";
	strService += " *------------------------------------------------------------------------------                                 \n";
	strService += " *    DATE     AUTHOR                      DESCRIPTION                        									\n";
	strService += " * ----------  ------  ---------------------------------------------------------                                 \n";
	strService += " * 2017/08/03  jiback(이름)                                                                                     \n";
	strService += " *------------------------------------------------------------------------------*/                               \n";
	strService += "package " + strPath + ".service;                                                                             	\n";                                                                         
	strService += "                                                                                                                 \n";                                                                               
	strService += "import java.util.List;                                                                                           \n";                                                                               
	strService += "import java.util.Map;                                                                                                                 \n";                                                                               
	strService += "                                                                                                                 \n";                                                                               
	strService += "public interface " + strXpName + " {                                                                            	\n";                                                                               
	strService += "	                                                                                                                \n";                                                                        
	strService += "	/**                                                                                                             \n";        	                                                        
	strService += "	 * 제너레이터 마스터 리스트(retrieve" + strWork + ")                                                         \n";                                                                        
	strService += "	 * @param input                                                                                                 \n";        	                                                        
	strService += "	 * @return                                                                                                      \n";        	                                                        
	strService += "	 * @throws Exception                                                                                           	\n";        	                                                        
	strService += "	 */                                                                                                             \n";                                                                        
	strService += "	void retrieve" + strWork + "(Map<String, Object> inVar, 	Map<String, List<Object>> inDataset,              	\n";                                                                        
	strService += "			Map<String, Object> outVar, Map<String, Object> outDataset) throws Exception;              		        \n";                                                                        
	strService += "                                                                                                                 \n";
	strService += "	/**                                                                                                             \n";        	                                                        
	strService += "	 * 템플릿 마스터 저장/수정(save" + strWork + ")                                                              \n";                                                                        
	strService += "	 * @param input                                                                                                 \n";        	                                                        
	strService += "	 * @return                                                                                                      \n";        	                                                        
	strService += "	 * @throws Exception                                                                                           	\n";        	                                                        
	strService += "	 */                                                                                                             \n";                                                                        
	strService += "	void save" + strWork + "(Map<String, Object> inVar, 	Map<String, List<Object>> inDataset,              	\n";                                                                        
	strService += "			Map<String, Object> outVar, Map<String, Object> outDataset) throws Exception;              		        \n";                                                                        
	strService += "                                                                                                                 \n";
	strService += "	/**                                                                                                             \n";        	                                                        
	strService += "	 * 템플릿 마스터 삭제(delete" + strWork + ")                                                              	\n";                                                                        
	strService += "	 * @param input                                                                                                 \n";        	                                                        
	strService += "	 * @return                                                                                                      \n";        	                                                        
	strService += "	 * @throws Exception                                                                                           	\n";        	                                                        
	strService += "	 */                                                                                                            	\n";                                                                        
	strService += "	void delete" + strWork + "(Map<String, Object> inVar, 	Map<String, List<Object>> inDataset,              	\n";                                                                        
	strService += "			Map<String, Object> outVar, Map<String, Object> outDataset) throws Exception;              		        \n";                                                                        
	strService += "                                                                                                                 \n";
	strService += "}                                                                                                                \n";
	
	
	this.tbMain.tbSub4.taSarvice.set_value(strService);
}

/**
* Devon SaveCmd Create()
* 저장 Cmd 자동생성기 
*/
this.fn_taServiceImpl = function()
{
	var strServiceImpl 		= "";
	var strGroup     		= (this.edWorkName.text).trim();
	var strMethod	 		= (this.edWorkName1.text).trim();
	var strWork 	 		= (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var strXpName    		= (strWork).trim() + "ServiceImpl";
	var strXpServiceName    = (strWork).trim() + "Service";
	var strXpServiceDAO  	= (strWork).trim() + "DAO";
	var strXpServiceDAO1    =  this.fn_xmlFile((strWork).trim()) + "DAO";
	var strXpServiceVO  	= (strWork).trim() + "VO";
	var strPath      		= (this.edPath.text).trim();
	var nRowCnt 			= this.DS_Detail.rowcount;
	var strColName      	= "";
	var strColPk        	= "";
		
	strServiceImpl += " /*------------------------------------------------------------------------------  							\n";
	strServiceImpl += "  * NAME : " + strXpName + ".java		                                                                   	\n";
	strServiceImpl += "  * DESC :                                                                                                   \n";
	strServiceImpl += "  * VER  : V1.0                                                                                              \n";
	strServiceImpl += "  * PROJ : 자산형성지원 정보화 구축                                                                      	\n";
	strServiceImpl += "  * Copyright 2017 Ready Korea All rights reserved                                                           \n";
	strServiceImpl += "  *------------------------------------------------------------------------------                            \n";
	strServiceImpl += "  *                               MODIFICATION LOG                                                           \n";
	strServiceImpl += "  *------------------------------------------------------------------------------                            \n";
	strServiceImpl += "  *    DATE     AUTHOR                      DESCRIPTION                        								\n";
	strServiceImpl += "  * ----------  ------  ---------------------------------------------------------                            \n";
	strServiceImpl += "  * 2017/10/11  jiback(이름)                                                                                \n";
	strServiceImpl += "  *------------------------------------------------------------------------------*/                          \n";
	strServiceImpl += " package " + strPath + ".service.impl;                                                                       \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += " import java.util.List;                                                                                      \n";
	strServiceImpl += " import java.util.Map;                                                                                       \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += " import " + strPath + ".dao." + strXpServiceDAO + ";                                                    \n";
	strServiceImpl += " import " + strPath + ".service." + strXpServiceName + ";                                               \n";
	strServiceImpl += " import " + strPath + ".vo." + strXpServiceVO + ";                                                      \n";
	strServiceImpl += " import lombok.extern.slf4j.Slf4j;                                                                           \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += " import org.springframework.beans.factory.annotation.Autowired;                                              \n";
	strServiceImpl += " import org.springframework.stereotype.Service;                                                              \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += " import com.nexacro.xapi.data.DataSet;                                                                       \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += " import egovframework.rte.fdl.cmmn.EgovAbstractServiceImpl;                                                  \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += " @Service                                                                                                    \n";
	strServiceImpl += " @Slf4j                                                                                                      \n";
	strServiceImpl += " public class " + strXpName + " extends EgovAbstractServiceImpl implements " + strXpServiceName + " {        \n";
	strServiceImpl += " 	                                                                                                        \n";
	strServiceImpl += "     /** " + strXpServiceDAO + " */                                                                          \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += "     @Autowired                                                                                              \n";
	strServiceImpl += "     " + strXpServiceDAO + " " + strXpServiceDAO1 + ";                                                       \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += "     /**                                                                                                     \n";
	strServiceImpl += " 	 * 제너레이터 디테일 리스트(retrieve" + strWork + ")                                                 \n";
	strServiceImpl += " 	 * @param input                                                                                         \n";
	strServiceImpl += " 	 * @return                                                                                              \n";
	strServiceImpl += " 	 * @throws LException                                                                                   \n";
	strServiceImpl += " 	 */                                                                                                     \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += "     public void retrieve" + strWork + "(Map<String, Object> inVar, 	Map<String, List<Object>> inDataset,    \n";
	strServiceImpl += " 			Map<String, Object> outVar, Map<String, Object> outDataset)                             		\n";
	strServiceImpl += " 	      throws Exception {                                                                                \n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		" + strXpServiceVO + " paramVO = new " + strXpServiceVO + "();                                                                                               	\n";
	strServiceImpl += " 		List<?> list = inDataset.get(" + "\"" + "ds_input" + "\"" + ");                                                                                               	\n";
	strServiceImpl += " 		paramVO = (" + strXpServiceVO + ")list.get(0);                                                                                                	\n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += "     	List<" + strXpServiceVO + "> records = " + strXpServiceDAO1 + ".retrieve" + strWork + "(paramVO);         \n";
	strServiceImpl += "     	outDataset.put(" + "\"" + "ds_list" + "\"" + ", records );                                         \n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		return;                                                                                         	\n";
	strServiceImpl += "     }                                                                                                       \n";
	strServiceImpl += "                                                                                                             \n";
	strServiceImpl += "     /**                                                                                                     \n";
	strServiceImpl += " 	 * 템플릿 마스터 저장/수정(save" + strWork + ")                                                      \n";
	strServiceImpl += " 	 * @param input                                                                                         \n";
	strServiceImpl += " 	 * @return                                                                                              \n";
	strServiceImpl += " 	 * @throws Exception                                                                                    \n";
	strServiceImpl += " 	 */                                                                                                     \n";
	strServiceImpl += " 	public void save" + strWork + "(                                                                        \n";
	strServiceImpl += "     		Map<String, Object> inVar, 	Map<String, List<Object>> inDataset,                    			\n";
	strServiceImpl += " 			Map<String, Object> outVar, Map<String, Object> outDataset)                             		\n";
	strServiceImpl += " 	      throws Exception {                                                                                \n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		//조회조건                                      													\n";
	strServiceImpl += " 		int rowType;                                                                                    	\n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		List<?> list = inDataset.get(" + "\"" + "ds_input" + "\"" + ");                                                          	\n";
	strServiceImpl += " 		" + strXpServiceVO + " paramVO = (" + strXpServiceVO + ")list.get(0);                                             	\n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		List<?> list1 = inDataset.get(" + "\"" + "ds_list" + "\"" + ");                                                        	\n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		for (int i = 0; i < list1.size(); i++) {                                                         	\n";
	strServiceImpl += " 			" + strXpServiceVO + " vo = (" + strXpServiceVO + ") list1.get(i);                                         		\n";
	strServiceImpl += " 			                                                                                        		\n";
	strServiceImpl += " 			if ( vo.getRowType() == DataSet.ROW_TYPE_INSERTED ) { // 저장                           		\n";
	strServiceImpl += " 				//pk레코드조회                                                                  			\n";
	strServiceImpl += " 				/*                                                                 			\n";
	strServiceImpl += " 				List <" + strXpServiceVO + "> recordKeyValue = " + strXpServiceDAO1 + ".retrieveKeyValue(paramVO);   			\n";
	strServiceImpl += " 				" + strXpServiceVO + " mapKeyValue = (" + strXpServiceVO + ")list.get(0);                         			\n";
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		 strColName	= this.gfn_trim(this.DS_Detail.getColumn(idx, "columnName"));
		 strColPk 	= this.gfn_trim(this.DS_Detail.getColumn(idx, "colPk"));

		 if( this.gfn_trim(strColPk).length > 0)
		 {
			strServiceImpl += " 				outDataset.put(" + "\"" + this.fn_strColName(strColName.toLowerCase()) + "\"" + ", mapKeyValue.get" + this.fn_xmlFile2(this.fn_strColName(strColName.toLowerCase())) + "() );    	        				\n";
		 }
	}
	strServiceImpl += " 				*/                                                                                			\n";
	strServiceImpl += " 				                                                                                			\n";
	strServiceImpl += " 				//업무저장                                                                      			\n";
	strServiceImpl += " 				" + strXpServiceDAO1 + ".insert" + strWork + "(vo);                                              			\n";
	strServiceImpl += " 			} else if ( vo.getRowType() == DataSet.ROW_TYPE_UPDATED ) { // 수정                     		\n";
	strServiceImpl += " 				//업무수정                                                                      			\n";
	strServiceImpl += " 				" + strXpServiceDAO1 + ".update" + strWork + "(vo);                                              			\n";
	strServiceImpl += " 			}                                                                                       		\n";
	strServiceImpl += " 		}                                                                                               	\n";
	strServiceImpl += " 		                                                                                                    \n";
	strServiceImpl += " 		List<" + strXpServiceVO + "> records = " + strXpServiceDAO1 + ".retrieve" + strWork + "(paramVO);                             \n";
	strServiceImpl += " 		outDataset.put(" + "\"" + "ds_list" + "\"" + ", records );                                                             \n";
	strServiceImpl += " 		return;                                                                                             \n";
	strServiceImpl += " 	}                                                                                                       \n";
	strServiceImpl += " 	                                                                                                        \n";
	strServiceImpl += " 	                                                                                                        \n";
	strServiceImpl += " 	/**                                                                                                     \n";
	strServiceImpl += " 	 * 템플릿 마스터 삭제(delete" + strWork + ")                                                        		\n";
	strServiceImpl += " 	 * @param input                                                                                         \n";
	strServiceImpl += " 	 * @return                                                                                              \n";
	strServiceImpl += " 	 * @throws Exception                                                                                    \n";
	strServiceImpl += " 	 */                                                                                                     \n";
	strServiceImpl += " 	public void delete" + strWork + "(                                                                           \n";
	strServiceImpl += "     		Map<String, Object> inVar, 	Map<String, List<Object>> inDataset,                                \n";
	strServiceImpl += " 			Map<String, Object> outVar, Map<String, Object> outDataset)                             		\n";
	strServiceImpl += " 	      throws Exception {                                                                                \n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		//조회조건                                      													\n";
	strServiceImpl += " 		int rowType;                                                                                    	\n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		List<?> list = inDataset.get(" + "\"" + "ds_list" + "\"" + ");                                                          	\n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		for (int i = 0; i < list.size(); i++) {                                                         	\n";
	strServiceImpl += " 			" + strXpServiceVO + " vo = (" + strXpServiceVO + ") list.get(i);                                         		\n";
	strServiceImpl += " 			if (vo.getRowType() == DataSet.ROW_TYPE_DELETED ) {                                     		\n";
	strServiceImpl += " 				//업무내용삭제                                                                  			\n";
	strServiceImpl += " 				" + strXpServiceDAO1 + ".delete" + strWork + "(vo);                                              			\n";
	strServiceImpl += " 			}                                                                                       		\n";
	strServiceImpl += " 		}                                                                                               	\n";
	strServiceImpl += " 		                                                                                                	\n";
	strServiceImpl += " 		return;                                                                                         	\n";
	strServiceImpl += " 	}                                                                                                       \n";
	strServiceImpl += " 	                                                                                                        \n";
	strServiceImpl += " }                                                                                                           \n";
	
	this.tbMain.tbSub5.taServiceImpl.set_value(strServiceImpl);

}

/**
* Devon DeleteCmd Create()
* 삭제 Cmd 자동생성기 
*/
this.fn_taDao = function()
{
	var strDao = "";
	var strGroup     		= (this.edWorkName.text).trim();
	var strMethod	 		= (this.edWorkName1.text).trim();
	var strWork 	 		= (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var strXpName    		= (strWork).trim() + "ServiceImpl";
	var strXpServiceName    = (strWork).trim() + "Service";
	var strXpServiceDAO  	= (strWork).trim() + "DAO";
	var strXpServiceVO  	= (strWork).trim() + "VO";
	var strPath      		= (this.edPath.text).trim();
	
	strDao += "/*------------------------------------------------------------------------------  	       \n";
	strDao += " * NAME : " + strXpServiceDAO + ".java                                                                \n";
	strDao += " * DESC :                                                                                   \n";
	strDao += " * VER  : V1.0                                                                              \n";
	strDao += " * PROJ : 자산형성지원 정보화 구축                                                       \n";
	strDao += " * Copyright 2017 Ready Korea All rights reserved                                           \n";
	strDao += " *------------------------------------------------------------------------------            \n";
	strDao += " *                               MODIFICATION LOG                                           \n";
	strDao += " *------------------------------------------------------------------------------            \n";
	strDao += " *    DATE     AUTHOR                      DESCRIPTION                        	           \n";
	strDao += " * ----------  ------  ---------------------------------------------------------            \n";
	strDao += " * 2017/10/11  jiback(이름)                                                                \n";
	strDao += " *------------------------------------------------------------------------------*/          \n";
	strDao += "package " + strPath + ".dao;                                                           \n";
	strDao += "                                                                                            \n";
	strDao += "import java.util.List;                                                                      \n";
	strDao += "                                                                                            \n";
	strDao += "import " + strPath + ".vo." + strXpServiceVO + ";                                                \n";
	strDao += "                                                                                            \n";
	strDao += "import org.apache.commons.logging.Log;                                                      \n";
	strDao += "import org.apache.commons.logging.LogFactory;                                               \n";
	strDao += "import org.mybatis.spring.SqlSessionTemplate;                                               \n";
	strDao += "import org.springframework.beans.factory.annotation.Autowired;                              \n";
	strDao += "import org.springframework.stereotype.Repository;                                           \n";
	strDao += "                                                                                            \n";
	strDao += "                                                                                            \n";
	strDao += "@Repository                                                                                 \n";
	strDao += "public class " + strXpServiceDAO + "{                                                       \n";
	strDao += "                                                                                            \n";
	strDao += "	Log logger = LogFactory.getLog(this.getClass());		                       			   \n";
	strDao += "                                                                                            \n";
	strDao += "	@Autowired                                                                                 \n";
	strDao += "	SqlSessionTemplate sqlSessionTemplate;                                                     \n";
	strDao += "    	                                                                                       \n";
	strDao += "	 /**                                                                                       \n";
	strDao += "	 * 템플릿 마스터 리스트(retrieve" + strWork + ")                                         \n";
	strDao += "	 * @param input                                                                            \n";
	strDao += "	 * @return                                                                             	   \n";
	strDao += "	 * @throws LException                                                                  	   \n";
	strDao += "	 */                                                                                    	   \n";
	strDao += "    public List<" + strXpServiceVO + "> retrieve" + strWork + "(" + strXpServiceVO + " vo) throws Exception {            \n";
	strDao += "                                                                                            \n";
	strDao += "     	return sqlSessionTemplate.selectList(" + "\"" +  strXpServiceDAO + ".retrieve" + strWork + "\"" + ", vo);  \n";
	strDao += "    }                                                                                       \n";
	strDao += "                                                                                            \n";
	strDao += "                                                                                            \n";
	strDao += "    /**                                                                                     \n";
	strDao += "	 * 템플릿 마스터 키값을 조회(retrieveKeyValue)                                          \n";
	strDao += "	 * @param input                                                                            \n";
	strDao += "	 * @return                                                                                 \n";
	strDao += "	 * @throws LException                                                                      \n";
	strDao += "	 */                                                                                        \n";
	strDao += "    public List<" + strXpServiceVO + "> retrieveKeyValue(" + strXpServiceVO + " vo) throws Exception {              \n";
	strDao += "                                                                                            \n";
	strDao += "     	return sqlSessionTemplate.selectList(" + "\"" + "" + strXpServiceDAO + ".retrieveKeyValue" + "\"" + ", vo);    \n";
	strDao += "    }                                                                                       \n";
	strDao += "                                                                                            \n";
	strDao += "                                                                                            \n";
	strDao += "    /**                                                                                     \n";
	strDao += "	 * 템플릿 마스터 저장(insert" + strWork + ")                                                  \n";
	strDao += "	 * @param input                                                                            \n";
	strDao += "	 * @return                                                                                 \n";
	strDao += "	 * @throws LException                                                                      \n";
	strDao += "	 */                                                                                        \n";
	strDao += "    public int insert" + strWork + "(" + strXpServiceVO + " vo) throws Exception {                           \n";
	strDao += "                                                                                            \n";
	strDao += "     	return sqlSessionTemplate.insert(" + "\"" + strXpServiceDAO + ".insert" + strWork +  "\"" + ", vo);        \n";
	strDao += "    }                                                                                       \n";
	strDao += "                                                                                            \n";
	strDao += "    /**                                                                                     \n";
	strDao += "	 * 템플릿 마스터 수정(update" + strWork + ")                                                  \n";
	strDao += "	 * @param input                                                                            \n";
	strDao += "	 * @return                                                                                 \n";
	strDao += "	 * @throws LException                                                                      \n";
	strDao += "	 */                                                                                        \n";
	strDao += "    public int update" + strWork + "(" + strXpServiceVO + " vo) throws Exception {                           \n";
	strDao += "                                                                                            \n";
	strDao += "     	return sqlSessionTemplate.update(" + "\"" + strXpServiceDAO + ".update" + strWork +  "\"" + ", vo);        \n";
	strDao += "    }                                                                                       \n";
	strDao += "                                                                                            \n";
	strDao += "    /**                                                                                     \n";
	strDao += "	 *  템플릿 마스터 삭제(delete" + strWork + ")                                                 \n";
	strDao += "	 * @param input                                                                            \n";
	strDao += "	 * @return                                                                                 \n";
	strDao += "	 * @throws LException                                                                      \n";
	strDao += "	 */                                                                                        \n";
	strDao += "    public int delete" + strWork + "(" + strXpServiceVO + " vo) throws Exception {                           \n";
	strDao += "                                                                                            \n";
	strDao += "     	return sqlSessionTemplate.delete(" + "\"" +  strXpServiceDAO + ".delete" + strWork + "\"" + ", vo);        \n";
	strDao += "    }                                                                                       \n";
	strDao += "                                                                                            \n";
	strDao += "}                                                                                           \n";
	
	this.tbMain.tbSub6.taDao.set_value(strDao);

}

/*===============================================================================================================================*/
this.fn_tbXmlquery = function(strTableName) 
{
	var strGroup     	= this.gfn_trim(this.edWorkName.text);
	var strWork 	 	= this.gfn_trim(this.edWorkName.text) + this.gfn_trim(this.edWorkName1.text);
	var strXpServiceDao = this.gfn_trim(strWork) + "DAO";
	var strPath 		= this.gfn_trim(this.edPath.text);
	var idx   			= 0;
    var nRowCnt 		= this.DS_Detail.rowcount;
	var strMetaData 	= "";
	var strColName  	= "";
	var strColPk    	= "";
	var strDataLength 	= "";
	var	strColType    	= "";
	var strColComent	= "";
	var strDto       	= this.gfn_trim((this.edVo.value)).substr(0,this.gfn_trim((this.edVo.value)).indexOf("."));
	
	this.tbMain.tbSub7.taXmlquery.set_value(""); 
	
	strMetaData += "<?xml version=" + "\"" + "1.0" + "\"" + " encoding=" + "\"" + "UTF-8" + "\"" + "?>																			\n";
	strMetaData += "<!DOCTYPE mapper PUBLIC  "+ "\"" + "-//mybatis.org//DTD SQL Mapper 3.0//EN" + "\" " + "\"" + "http://mybatis.org/dtd/mybatis-3-mapper.dtd" + "\"" + ">		\n";
	strMetaData += "<mapper namespace=" + "\"" + strXpServiceDao + "\"" + ">																											\n";
	strMetaData += "\n";
	strMetaData += "\t" + "<!-- 테이블 조회(입력) -->								\n";
	strMetaData += "\t" + "<select id="  + "\"" +"retrieve"  + strWork + "\""  + " parameterType=" + "\"" + strDto + "\"" + " " +  "resultType=" + "\""  + strDto + "\"" + ">                    									\n";
	strMetaData += "\t" + "\t" + "<![CDATA[                                                													\n";
	strMetaData += "\t"	+ "\t" + "\t" + "SELECT                                                  											\n";
	strMetaData += "\t"	+ "\t" + "\t" +  "       " + "'0' AS chk" + "/*".padLeft((27-"chk".length)," ") + "chk" + "*/        		\n";

	 for (idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "columnName"));
		strColComent 	= this.gfn_trim(this.DS_Detail.getColumn(idx, "comments"));
		strMetaData += "\t"	+ "\t" + "\t" +  "     , A." + strColName +  "/*".padLeft((30-(strColName.toLowerCase()).length)," ") + strColComent + "*/        \n";
		//strMetaData += "\t"	+ "\t" + "\t" +  "     , A." + strColName + " ".padLeft((35-strColName.length)," ") + "/*".padLeft((30-this.fn_strColName(strColName.toLowerCase()).length)," ") + strColComent + "*/        \n";
	}
	strMetaData += "\t"	+ "\t" + "\t" + "FROM " + strTableName + " A                                           								 \n";
	strMetaData += "\t"	+ "\t" + "\t" + "WHERE 1=1                                             												 \n";
	/*
	for (idx = 0; idx < nRowCnt; idx ++)
    {
		 strColName	= this.gfn_trim(this.DS_Detail.getColumn(idx, "columnName"));
		 strColPk = this.gfn_trim(this.DS_Detail.getColumn(idx, "colPk"));

		 if( (strColPk).length > 0)
		 {
			strMetaData += "\t"	+ "\t" + "\t" + "AND " + strColName + " = #" + strColName.toLowerCase() + "#" + "       \n";
		 }
	}
	*/
 	strMetaData += "\t" + "\t" + "]]" +">                                                      												 \n";
	/*-------------------------------------------------------------------*/
	var pkRow = this.DS_Detail.findRow("colPk","Y");
	if(pkRow >-1)
	{
		for (idx = 0; idx < nRowCnt; idx ++)
		{
			 strColName	= this.gfn_trim(this.DS_Detail.getColumn(idx, "columnName"));
			 strColPk = this.gfn_trim(this.DS_Detail.getColumn(idx, "colPk"));

			 if(this.gfn_trim(strColPk).length > 0)
			 {
				strMetaData += "\t"	+ "\t" +  "<if test=" + "\"" + this.fn_strColName(strColName.toLowerCase()) +" != null and "+ this.fn_strColName(strColName.toLowerCase()) + " != ''" +"\"" +  ">      \n";
		    	strMetaData += "\t"	+ "\t" + "\t" + "<![CDATA[                                         																						\n";
				strMetaData += "\t"	+ "\t" + "\t" +"\t" +  "AND A." + strColName +" = " + "#{" + this.fn_strColName(strColName.toLowerCase()) + "}" + "                     						\n";
				strMetaData += "\t"	+ "\t" + "\t" + "]]" + ">                                           																					\n";
				strMetaData += "\t"	+ "\t" + "</if>	                                                    																				\n";
			 }

		}

	}
	
	strMetaData += "\n";
	strMetaData += "\t" + "</select> 	                                                        													\n";
	strMetaData += "\n";
	strMetaData += "\t" + "<!-- 테이블 유니크한 키를 조회 -->								\n";
	strMetaData += "\t" + "<select id="  + "\"" + "retrieve"  + "KeyValue"  + "\""  + " parameterType=" + "\"" + strDto + "\"" + " " +  "resultType=" + "\"" +  "String" + "\"" + "> \n";
	strMetaData += "\t" + "\t" + "<![CDATA[                                                													\n";
	strMetaData += "\t"	+ "\t" + "\t" + "SELECT                                                  											\n";
 	strMetaData += "\t"	+ "\t" + "\t" + "\t" + "LPAD(NVL(MAX(TO_NUMBER(code))+1,'1'),5,'0') AS keyCode        								       \n";
	strMetaData += "\t"	+ "\t" + "\t" + "FROM " + strTableName + " A                                            								 \n";
	strMetaData += "\t"	+ "\t" + "\t" + "WHERE 1=1                                             												 \n";

	for (idx = 0; idx < nRowCnt; idx ++)
    {
		 strColName	= this.gfn_trim(this.DS_Detail.getColumn(idx, "columnName"));
		 strColPk = this.gfn_trim(this.DS_Detail.getColumn(idx, "colPk"));

		 if( this.gfn_trim(strColPk).length > 0)
		 {
			strMetaData += "\t"	+ "\t" + "\t" + "AND A." + strColName + " = #{" + this.fn_strColName(strColName.toLowerCase()) + "}" + "       \n";
		 }
	}
	
	strMetaData += "\t" + "\t" + "]]" +">                                                      												 \n";
	strMetaData += "\n";
	strMetaData += "\t" + "</select> 	                                                        													\n";
	strMetaData += "\n";
	strMetaData += "\t" + "<!-- 데이타 저장(입력) -->								\n";
	strMetaData += "\t" + "<insert id=" + "\"" + "insert" + strWork +  "\"" + " parameterType=" + "\"" +  strDto + "\"" + " >                                          							\n";
	strMetaData += "\t"	+ "\t" + "<![CDATA[                                                																\n";
	strMetaData += "\t"	+ "\t" + "\t" + "INSERT INTO " + strTableName + "                                       										\n";
	strMetaData += "\t"	+ "\t" + "\t" + "(                                       																		\n";
	for (idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColComent 	= this.DS_Detail.getColumn(idx, "comments");
		if(idx == 0)
		{
			//strMetaData += "\t"	+ "\t" + "\t" +  "       " + strColName + "                                       									\n";
			strMetaData += "\t"	+ "\t" + "\t" +  "       " + strColName + "/*".padLeft((100-strColName.length)," ") +  this.gfn_trim(strColComent) + "*/                  \n";
		}else
		{
			//strMetaData += "\t"	+ "\t" + "\t" +  "     , " + strColName + "                                      									\n";
			strMetaData += "\t"	+ "\t" + "\t" +  "     , " + strColName + "/*".padLeft((100-strColName.length)," ") +  this.gfn_trim(strColComent) + "*/                   \n";
		}
	}
	strMetaData += "\t"	+ "\t" + "\t" + ")VALUES                                                  														\n";
	strMetaData += "\t"	+ "\t" + "\t" + "(                                                        														\n";

	for (idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));
		if(idx == 0)
		{
			if(strColType == "DATE")
			{
				strMetaData += "\t"	+ "\t" + "\t" +  "       SYSDATE                                   \n";

			}else
			{
				strMetaData += "\t"	+ "\t" + "\t" +  "       #{" + this.fn_strColName(strColName.toLowerCase()) + "}" + "                                   \n";
			}
		}else
		{
			if(strColType == "DATE")
			{
				strMetaData += "\t"	+ "\t" + "\t" +  "     , SYSDATE                                   \n";

			}else
			{
				strMetaData += "\t"	+ "\t" + "\t" +  "     , #{" +  this.fn_strColName(strColName.toLowerCase()) + "}" + "                                   \n";
			}
		}
	}
	strMetaData += "\t"	+ "\t" + "\t" + ")	                                                      														\n";
	strMetaData += "\t"	+ "\t" + "]]" +">                                    																			\n";
	strMetaData += "\n";
	strMetaData += "\t" + "</insert> 																													\n";
	/*-------------------------------------------------------------------*/
	strMetaData += "\n";
	strMetaData += "\t" + "<!--데이타 수정(입력) -->								\n";
	strMetaData += "\t" + "<update id=" + "\"" + "update" + strWork + "\"" + " parameterType=" + "\"" + strDto + "\"" + " > \n";
	strMetaData += "\t" + "\t" + "<![CDATA[                                                																\n";
	strMetaData += "\t" + "\t" + "\t" + "UPDATE " + strTableName + "                                													\n";
	strMetaData += "\t" + "\t" + "\t" + "SET                                                      														\n";
	for (idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColComent 	= this.DS_Detail.getColumn(idx, "comments");
		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));
		if(idx == 0)
		{
			if(strColType == "DATE")
			{
				strMetaData += "\t"	+ "\t" + "\t" + "       " + strColName + "  = ".padLeft((34-"SYSDATE".length)," ") + "SYSDATE" + "/*".padLeft((62-"SYSDATE".length)," ") + this.gfn_trim(strColComent) + "*/  \n";

			}else
			{
				strMetaData += "\t"	+ "\t" + "\t" + "       " + strColName + " = #{".padLeft((40-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "}" + "/*".padLeft((59-strColName.length)," ") + this.gfn_trim(strColComent) + "*/  \n";
			}
		}else
		{
			if(strColType == "DATE")
			{
				strMetaData += "\t"	+ "\t" + "\t" + "     , " + strColName + "  = ".padLeft((34-"SYSDATE".length)," ") + "SYSDATE" + "/*".padLeft((62-"SYSDATE".length)," ") + this.gfn_trim(strColComent) + "*/  \n";

			}else
			{
				strMetaData += "\t"	+ "\t" + "\t" + "     , " + strColName + " = #{".padLeft((40-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "}" + "/*".padLeft((59-strColName.length)," ") + this.gfn_trim(strColComent) + "*/  \n";
			}
		}
	}
	strMetaData += "\t" + "\t" + "\t" + "WHERE 1=1                                                   						                        \n";
	for (idx = 0; idx < nRowCnt; idx ++)
    {
		 strColName	= this.DS_Detail.getColumn(idx, "columnName");
		 strColPk = this.DS_Detail.getColumn(idx, "colPk");
		 if(this.gfn_trim(strColPk).length > 0)
		 {
			strMetaData += "\t"	+ "\t" + "\t" + "AND " + strColName + " = #{" + this.fn_strColName(strColName.toLowerCase()) + "}" + "        		\n";
		 }
	}
	strMetaData += "\t" + "\t" + "]]" +">  	                                   							                            				\n";
	strMetaData += "\n";
	strMetaData += "\t" + "</update>                                                           													\n";
				/*--------------------------MERGE-----------------------------------------*/
	strMetaData += "\n";	
	strMetaData += "\t" + "<!--데이타 머지(입력) -->								                     \n";	
	strMetaData += "\t" + "<update id=" + "\"" + "merge" + strWork + "\"" + " parameterType=" + "\"" + strDto + "\"" + " > \n";
	strMetaData += "\t" + "\t" + "<![CDATA[                                                				 \n";
	strMetaData += "\t" + "\t" + "\t" + "MERGE INTO " + strTableName + " A                               \n";
	strMetaData += "\t" + "\t" + "\t" + "     USING DUAL                                                 \n";
	strMetaData += "\t" + "\t" + "\t" + "        ON (                                                 	 \n";
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		 strColName	= this.DS_Detail.getColumn(idx, "columnName");
		 strColPk 	= this.DS_Detail.getColumn(idx, "colPk");
		 if((strColPk.trim()).length > 0)
		 {
			if(idx == 0)
			{
				strMetaData += "\t"	+ "\t" + "\t" + "                  A." + strColName + " = #{".padLeft((18-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "}" + "        		\n";	
			
			} else
			{
				strMetaData += "\t"	+ "\t" + "\t" + "              AND A." + strColName + " = #{".padLeft((18-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "}" + "        		\n";	
			}
			
			
		 }
	}
	strMetaData += "\t" + "\t" + "\t" + "           )                                                 	 \n";
	strMetaData += "\t" + "\t" + "\t" + "      WHEN MATCHED THEN                                                    \n";
	strMetaData += "\t" + "\t" + "\t" + "           UPDATE SET                               													\n";
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColComent 	= this.DS_Detail.getColumn(idx, "comments");
		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));
		strColPk 	    = this.DS_Detail.getColumn(idx, "colPk");
		if(idx == 0)
		{
			if(strColType == "DATE")
			{
				strMetaData += "\t"	+ "\t" + "\t" + "                A." + strColName + " = ".padLeft((18-"SYSDATE".length)," ") + "SYSDATE" + "/*".padLeft((22-"SYSDATE".length)," ") + this.gfn_trim(strColComent) + "*/  \n";	
			
			}else
			{
				strMetaData += "\t"	+ "\t" + "\t" + "                A." + strColName + " = #{".padLeft((20-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "}" + "/*".padLeft((20-this.fn_strColName(strColName.toLowerCase()).length)," ") + this.gfn_trim(strColComent) + "*/  \n";	
			}
		}else 
		{
			if(strColType == "DATE")
			{
				strMetaData += "\t"	+ "\t" + "\t" + "              , A." + strColName + " = ".padLeft((18-"SYSDATE".length)," ") + "SYSDATE" + "/*".padLeft((22-"SYSDATE".length)," ") + this.gfn_trim(strColComent) + "*/  \n";
			
			}else
			{
				strMetaData += "\t"	+ "\t" + "\t" + "              , A." + strColName + " = #{".padLeft((20-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "}" + "/*".padLeft((20-this.fn_strColName(strColName.toLowerCase()).length)," ") + this.gfn_trim(strColComent) + "*/  \n";
			}
		}
	}
	strMetaData += "\t" + "\t" + "\t" + "      WHEN NOT MATCHED THEN                                                  \n";
	strMetaData += "\t"	+ "\t" + "\t" + "           INSERT                                        					  \n";
	strMetaData += "\t"	+ "\t" + "\t" + "           (                                       									  \n";
	for (var idx = 0; idx < nRowCnt; idx++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColComent 	= this.DS_Detail.getColumn(idx, "comments");
		if(idx == 0)
		{
			strMetaData += "\t"	+ "\t" + "\t" +  "                A." + strColName + "                 \n";	
		}else 
		{
			strMetaData += "\t"	+ "\t" + "\t" +  "              , A." + strColName + "                 \n";		
		}
	}
	strMetaData += "\t"	+ "\t" + "\t" + "           )VALUES                                                  														\n";
	strMetaData += "\t"	+ "\t" + "\t" + "           (                                                        														\n";

	for(var idx = 0; idx < nRowCnt; idx++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));
		if(idx == 0)
		{
			if(strColType == "DATE")
			{
				strMetaData += "\t"	+ "\t" + "\t" +  "                SYSDATE                                   \n";	
			
			}else
			{
				strMetaData += "\t"	+ "\t" + "\t" +  "                #{" + this.fn_strColName(strColName.toLowerCase()) + "}" + "                                   \n";	
			}
		}else 
		{
			if(strColType == "DATE")
			{
				strMetaData += "\t"	+ "\t" + "\t" +  "              , SYSDATE                                   \n";
			
			}else
			{
				strMetaData += "\t"	+ "\t" + "\t" +  "              , #{" +  this.fn_strColName(strColName.toLowerCase()) + "}" + "                                   \n";
			}
		}
	}
	strMetaData += "\t"	+ "\t" + "\t" + "           )	                                                      														\n";
	strMetaData += "\t" + "\t" + "]]" +">  	                                   							                            				\n";
	strMetaData += "\t" + "</update>                                                           													\n";
	
	/*-------------------------------------------------------------------*/
	strMetaData += "\n";
	strMetaData += "\t" + "<!--데이타 삭제(입력) -->								\n";
	strMetaData += "\t" + "<delete id=" + "\"" + "delete" + strWork + "\"" + " parameterType=" + "\"" + strDto + "\"" + " > \n";
	strMetaData += "\t" + "\t" + "<![CDATA[                                                           												\n";
	strMetaData += "\t" + "\t" + "\t" + "DELETE FROM " + strTableName + "                                                  							\n";
	strMetaData += "\t" + "\t" + "\t" + "WHERE 1=1                              																	\n";
	for (idx = 0; idx < nRowCnt; idx ++)
    {
		 strColName	= this.DS_Detail.getColumn(idx, "columnName");
		 strColPk = this.DS_Detail.getColumn(idx, "colPk");
		 if(this.gfn_trim(strColPk).length > 0)
		 {
			strMetaData += "\t"	+ "\t" + "\t" + "AND " + strColName + " = #{" + this.fn_strColName(strColName.toLowerCase()) + "}" + "        		\n";
		 }
	}
	strMetaData += "\t" + "\t" + "]]" +">                                                															\n";
	strMetaData += "\n";
	strMetaData += "\t" + "</delete>	                                                          													\n";
	strMetaData += "</mapper>                                                                 													\n";
    strMetaData += "                                                                 																\n";

    strMetaData += "------------------------------------파싱데이타 셋(ds에 Contents속성에 반듯이 넣어주세요. -------------------------------	\n";
   
    
    strMetaData += "                                                                 																\n";
	strMetaData += "<ColumnInfo>                                                                 														\n";
	strMetaData += "\t"	+  "<Column id=" + "\"" +  "chk" + "\"" + " type=" + "\"" + "STRING" + "\"" + " size=" + "\"" + "1" + "\"" + "/>\n";
	for(var idx = 0; idx < nRowCnt; idx++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strDataLength 	= this.DS_Detail.getColumn(idx, "dataLength");

		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));

		var strDsType;
		switch(strColType)
        {
            case "VARCHAR2":
            case "VARCHAR":
                strDsType = "STRING";
                break;
            case "CHAR":
				strDsType = "STRING";
				break;
            case "DATE":
				strDsType = "STRING";
				break;
            case "NUMBER":
				strDsType = "BIGDECIMAL";
				break;
            case "INTEGER":
				strDsType = "INT";
				break;
            case "BLOB":
                strDsType = "BLOB";
                break;
            default:
                strDsType = "STRING";
                break;
        }

		strMetaData += "\t"	+  "<Column id=" + "\"" +  this.fn_strColName(strColName.toLowerCase()) + "\"" + " type=" + "\"" + strDsType + "\"" + " size=" + "\"" + strDataLength + "\"" + "/>\n";
	}
	strMetaData += "</ColumnInfo>                                                                 														\n";
	strMetaData += "                                                                 														\n";
    strMetaData += "                                                                 														\n";
    strMetaData += "------------------------------------그리드 데이타 셋 디자인 입니다.   ------------------------------------------\n";
    strMetaData += "                                                                 														\n";
	strMetaData += "<Grid id=" + "\"" + "gdMaster" + "\"" + " taborder=" + "\"" + "1" + "\"" + " binddataset=" + "\"" + "ds_list" + "\"" + " ";
	strMetaData += "autoenter=" + "\"" + "select" + "\"" + " useinputpanel=" + "\"" + "false" + "\"" + " autofittype=" + "\"" + "none" + "\"" + " ";
	strMetaData += "onheadclick=" + "\"" + "gdMaster_onheadclick" + "\"" + " onheaddblclick=" + "\"" + "gdMaster_onheaddblclick" + "\"" + " ";
	strMetaData += "position=" + "\"" + "absolute 9 75 1045 580" + "\"" + " left=" + "\"" + "0" + "\"" + " top=" + "\"" + "78" + "\"" + " ";
	strMetaData += "bottom=" + "\"" + "45" + "\"" + " right=" + "\"" + "0" + "\"" + "> \n";
	strMetaData += "  <Formats>                                                                                                                                                                                                                                                                                                                                                  \n";                           
	strMetaData += "    <Format id=" + "\"" + "default" + "\"" + ">                                                                                                                                                                                                                                                                                                              \n";
	strMetaData += "      <Columns>                                                                                                                                                                                                                                                                                                                                              \n";
	strMetaData += "        <Col size=" + "\"" + "40" + "\"" + "/>                                                                                                                                                                                                                                                                                                            \n";
	strMetaData += "        <Col size=" + "\"" + "40" + "\"" + "/>                                                                                                                                                                                                                                                                                                            \n";
	for (var idx = 0; idx < nRowCnt; idx++ )
    {
		strMetaData += "        <Col size=" + "\"" + "100" + "\"" + "/>                                                                                                                                                                             \n";
	}
	strMetaData += "      </Columns>                                                                                                                                                                                                                                                                                                                                             \n";
	strMetaData += "      <Rows>                                                                                                                                                                                                                                                                                                                                                 \n";
	strMetaData += "        <Row size=" + "\"" + "30" + "\"" + " band=" + "\"" + "head" + "\"" + "/>                                                                                                                                                                                                                                                                             \n";
	strMetaData += "        <Row size=" + "\"" + "30" + "\"" + "/>                                                                                                                                                                                                                                                                                                               \n";
	strMetaData += "      </Rows>                                                                                                                                                                                                                                                                                                                                                \n";
	strMetaData += "      <Band id=" + "\"" + "head" + "\"" + ">                                                                                                                                                                                                                                                                                                                 \n";
	strMetaData += "        <Cell displaytype=" + "\"" + "normal" + "\"" + " text=" + "\"" + "No." + "\"" + "/>                                                                                                                                                                                                                                                                  \n";
	strMetaData += "        <Cell col=" + "\"" + "1" + "\"" + " displaytype=" + "\"" + "checkbox" + "\"" + " edittype=" + "\"" + "checkbox" + "\"" + "/>                                                                                                                                                                                                                         \n";
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		strHeadName   	= this.DS_Detail.getColumn(idx, "comments");
		strMetaData += "        <Cell col=" + "\"" + (idx+2).toString() + "\"" + " disptype=" + "\"" + "normal" + "\"" + " text=" + "\"" + this.gfn_trim(strHeadName).toLowerCase() + "\"" + "/>  \n";
		
	}
	strMetaData += "      </Band>                                                                                                                                                                                                                                                                                                                                                \n";
	strMetaData += "      <Band id=" + "\"" + "body" + "\"" + ">                                                                                                                                                                                                                                                                                                                 \n";
	strMetaData += "        <Cell displaytype=" + "\"" + "normal" + "\"" + " text=" + "\"" + "expr:currow+1" + "\"" + " editlengthunit=" + "\"" + "utf8" + "\"" + "/>                                                                                                                                                                                                            \n";
	strMetaData += "        <Cell col=" + "\"" + "1" + "\"" + " displaytype=" + "\"" + "checkbox" + "\"" + " edittype=" + "\"" + "checkbox" + "\"" + " text=" + "\"" + "bind:chk" + "\"" + " editlimit=" + "\"" + "1" + "\"" + " editlengthunit=" + "\"" + "utf8" + "\"" + "/>                                                                                                   \n";
	for (var idx = 0; idx < nRowCnt; idx++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));
		strDataLength 	= this.DS_Detail.getColumn(idx, "dataLength");
		
		var strDsType;
		var strAlignSize;
		var strEType;
		switch(strColType) 
        {
            case "VARCHAR2":
            case "VARCHAR":
                strDsType = "text";
                strEType  = "text";
                strAlignSize = "left";
                break;
            case "CHAR":
				strDsType = "text";
				strEType  = "text";
				strAlignSize = "center";
				break;
            case "DATE":
				strDsType = "text";
				strEType  = "text";
				strAlignSize = "center";
				break;
            case "NUMBER":
				strDsType = "number";
				strEType  = "mask";
				strAlignSize = "right";
				break;
            case "INTEGER":
				strDsType = "number";
				strEType  = "mask";
				strAlignSize = "right";
				break;
            case "BLOB":
                strDsType = "text";
                strEType  = "text";
                strAlignSize = "left";
                break;
            default:
                strDsType = "text";
                strEType  = "text";
                strAlignSize = "center";
                break;
        }
		if(strDsType == "date")
		{
			strMetaData += "        <Cell col=" + "\"" + (idx+2).toString() + "\"" + " displaytype=" + "\"" + this.gfn_trim(strDsType) + "\"" + " edittype=" + "\"" + this.gfn_trim(strEType) + "\"" + " style=" + "\"" + "align:" + this.gfn_trim(strAlignSize) + "\"" + " text=" + "\"" + "bind:" + this.fn_strColName(strColName.toLowerCase()) + "\"" + " editlimit=" + "\"" + strDataLength + "\"" + " editlengthunit=" + "\"" + "utf8" + "\""+ " calendardisplaynulltype=" + "\"" + "none" + "\"" + "/>  \n";
		
		}else
		{
			strMetaData += "        <Cell col=" + "\"" + (idx+2).toString() + "\"" + " displaytype=" + "\"" + this.gfn_trim(strDsType) + "\"" + " edittype=" + "\"" + this.gfn_trim(strEType) + "\"" + " style=" + "\"" + "align:" + this.gfn_trim(strAlignSize) + "\"" + " text=" + "\"" + "bind:" + this.fn_strColName(strColName.toLowerCase()) + "\"" + " editlimit=" + "\"" + strDataLength + "\"" + " editlengthunit=" + "\"" + "utf8" + "\"" + "/>  \n";
		}
	}strMetaData += "      </Band>                                                                                                                                                                                                                                                                                                                                                \n";
	strMetaData += "    </Format>                                                                                                                                                                                                                                                                                                                                                \n";
	strMetaData += "  </Formats>                                                                                                                                                                                                                                                                                                                                                 \n";
	strMetaData += "</Grid>                                                                                                                                                                                                                                                                                                                                                      \n";
	strMetaData += "                                                                 														\n";
	strMetaData += "------------------------------------salMap 인터페이스(sqlSession-config.xml 등록해주세요).   ------------------------------------------\n";
	strMetaData += "\n";

	strMetaData += "<package name=" + "\"" + "kr.or.cssf.bass." + this.cbUsers01.value + ".vo" + "\"" + "/> \n";

	this.tbMain.tbSub7.taXmlquery.set_value(strMetaData); 

}


/**
	테이블 크레이트를 만든다
 */
this.fn_taXOracle = function(strTableName)
{
	this.tbMain.tbSub8.taXOracle.set_value("");
	var strBlank   			= "                                                         ";
    var strXOracle 			= "";
    var strColLine 			= "";
    var strComent 			= "";
    var strSqData  			= "";
    var strSqData1  		= "";
    var strSqData2  		= "";
    var strSqData3  		= "";
    var DsType 				= "";
    var strTabspace 		= "";
    var strTabIndex 		="";
    
    var strColName   		= ""; 
    var strColType   		= "";
    var strColNull   		= "";
    var strColDef    		= "";
    var strColComent 		= "";
    var strDataType  		= "";
    var strDataLength 		= "";
    
    var strConstraint 		= "";
    var strConstraint1 		= "";
    
    var idx   = 0;
    var nRowCnt = this.DS_Detail.rowcount;

    strXOracle += "DROP TABLE " 			+  strTableName + ";\n\n";
    strXOracle += "CREATE TABLE " 			+  strTableName + "(\n";
    strComent  += "COMMENT ON TABLE " 		+  strTableName + " IS '" + 
    this.DS_Master.getColumn(this.DS_Master.rowposition, "comments") + "';\n";
    
	var chkFalg = this.DS_Detail.findRow("colPk","Y");
	
    for(var idx = 0; idx < nRowCnt; idx++)
    {
        strColName   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "columnName"));
        strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "vwDataType"));
        strColNull   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "colNull"));
        strColPk     	= this.gfn_trim(this.DS_Detail.getColumn(idx, "colPk"));
        strColDef    	= this.gfn_trim(this.DS_Detail.getColumn(idx, "colDef"));
        strColComent 	= this.gfn_trim(this.DS_Detail.getColumn(idx, "comments"));
        strDataType  	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));
        strDataLength 	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataLength"));
   
        if ( this.gfn_trim(strColDef).length != 0)
        {
            strColDef = " DEFAULT " + strColDef;
        }
        if(chkFalg > -1)
        {
        	if(idx == (nRowCnt-1))
			{
				strColLine = "  " + strColName + " " + strColType + " " + strColNull + strColDef + ",";
				
			}else
			{		
				strColLine = "  " + strColName + " " + strColType + " " + strColNull + strColDef + ",";
			}
        }else
        {
		
			if(idx == (nRowCnt-1))
			{
				strColLine = "  " + strColName + " " + strColType + " " + strColNull + strColDef;
			
			}else
			{
				strColLine = "  " + strColName + " " + strColType + " " + strColNull + strColDef + ",";
			
			}
        }
        
        strColLine += strBlank.substr( 0, 50 - strColLine.length);
       
        strXOracle += strColLine + " -- " + strColComent + "\n";
        
        strComent +=  "COMMENT ON COLUMN " + strTableName + "." + strColName + " IS '" + strColComent + "';\n";
      
        if ( (this.gfn_trim(strColPk)).length != 0)
        {
        
            if (strConstraint == "")
            {
                strConstraint += strColName;
                strConstraint1 += "\t  " + strColName +" ASC \n";
            }
            else 
            {
                strConstraint += ", " + strColName;
                strConstraint1 += "\t, " + strColName+" ASC \n";
            }
        }
       
 
    } //END FOR
    
    if ((strConstraint.trim()).length != 0)
    {
        strXOracle += "  CONSTRAINT PK_" + strTableName + " PRIMARY KEY (" + strConstraint + ")\n";
    }
    
    strXOracle += ");";
   
    strSqData += "SELECT                                                  														\n";
	
    for (var idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "columnName"));
		strColComent 	= this.gfn_trim(this.DS_Detail.getColumn(idx, "comments"));
		if(idx == 0)
		{												
			strSqData += "       " + strColName + "--".padLeft((30-strColName.length)," ") + strColComent + "                                       										\n";	
		}else 
		{
			strSqData += "     , " + strColName + "--".padLeft((30-strColName.length)," ") + strColComent + "                                      										\n";
		}
	}
	strSqData += "FROM " + strTableName + "                                             											\n";
	strSqData += "WHERE 1=1";
	var chk = this.DS_Detail.findRow("colPk","Y");

	if(chk < 0)
	{
		strSqData += ";";	
	
	}else
	{
		strSqData += "\n";	
	}
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		 strColName		= this.DS_Detail.getColumn(idx, "columnName");
		 strColPk 		= this.DS_Detail.getColumn(idx, "colPk");
		 strColComent 	= this.DS_Detail.getColumn(idx, "comments");
		 if((this.gfn_trim(strColPk)).length > 0)
		 {
			strSqData += "-- AND " + strColName + " = @".padLeft((30-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "--".padLeft((15-strColName.length)," ") + strColComent + "        					\n";	
		 }
	}
	if(chk > -1)
	{
		strSqData += ";";	
	
	}
// 	====================sql 입력 쿼리 =========================================//
	strSqData1 += "INSERT INTO " + strTableName + "                                       										\n";
	strSqData1 += "(                                       																		\n";
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "columnName"));
		strColComent 	= this.gfn_trim(this.DS_Detail.getColumn(idx, "comments"));
		
		if(idx == 0)
		{
			strSqData1 += "       " + strColName + "--".padLeft((30-strColName.length)," ") + strColComent + "                                       										\n";	
		
		}else 
		{
			strSqData1 += "     , " + strColName + "--".padLeft((30-strColName.length)," ") + strColComent + "                                      										\n";
		}
	}
	strSqData1 += ")VALUES                                                  														\n";
	strSqData1 += "(                                                        														\n";
	for(var idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));
		
		switch(strColType) 
        {
            case "VARCHAR2":
            case "VARCHAR":
                DsType = "";
                break;
            case "CHAR":
				DsType = "";
				break;
            case "DATE":
				DsType = "SYSDATE";
				break;
            case "NUMBER":
				DsType = "0";
				break;
            case "INTEGER":
				DsType = "0";
				break;
            case "BLOB":
                DsType = "";
                break;
            default:
                DsType = "";
                break;
        }
		
		
		if(idx == 0)
		{
			strSqData1 += "       " + ((DsType.length==0) ? "''" : DsType) + "-- ".padLeft(30 -((DsType.length==0) ? "''" : DsType).length," ") + this.fn_strColName(strColName.toLowerCase()) + "                                       		\n";	
		
		}else 
		{
			strSqData1 += "     , " + ((DsType.length==0) ? "''" : DsType) + "-- ".padLeft(30 -((DsType.length==0) ? "''" : DsType).length," ") + this.fn_strColName(strColName.toLowerCase()) + "                                      		\n";
		}
		
	}
	strSqData1 += ");	                                                      														\n";
    
   // ====================sql 수정 쿼리 =========================================//
    strSqData3 += "UPDATE " + strTableName + "                                													\n";
	strSqData3 += "SET                                                      														\n";
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColComent 	= this.DS_Detail.getColumn(idx, "comments");
		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));
		
		switch(strColType) 
        {
            case "VARCHAR2":
            case "VARCHAR":
                DsType = "";
                break;
            case "CHAR":
				DsType = "";
				break;
            case "DATE":
				DsType = "SYSDATE";
				break;
            case "NUMBER":
				DsType = "0";
				break;
            case "INTEGER":
				DsType = "0";
				break;
            case "BLOB":
                DsType = "";
                break;
            default:
                DsType = "";
                break;
        }
        
		if(idx == 0)
		{																															
			strSqData3 += "       " + strColName + " = ".padLeft((20-strColName.length)," ") + ((DsType.length==0) ? "''" : DsType) + "-- ".padLeft(30 -((DsType.length==0) ? "''" : DsType).length," ") + this.fn_strColName(strColName.toLowerCase()) + strColComent + "                         \n";	
		}else 
		{
			strSqData3 += "     , " + strColName + " = ".padLeft((20-strColName.length)," ") + ((DsType.length==0) ? "''" : DsType) + "-- ".padLeft(30 -((DsType.length==0) ? "''" : DsType).length," ") + this.fn_strColName(strColName.toLowerCase()) + strColComent +  "                         \n";
		}
	}
	strSqData3 += "WHERE 1=1                                                   						                            \n";
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		 strColName		= this.DS_Detail.getColumn(idx, "columnName");
		 strColPk 		= this.DS_Detail.getColumn(idx, "colPk");
		 strColComent 	= this.DS_Detail.getColumn(idx, "comments");
		 if( this.gfn_trim(strColPk).length > 0)
		 {
			strSqData3 +="AND " + strColName + " = '' --@".padLeft((15-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "--".padLeft((15-strColName.length)," ") + strColComent + "        					\n";	
		 }
	}
    strSqData3 += ";";
    
    
  //  ====================sql 삭제 쿼리 =========================================//
    strSqData2 += "DELETE FROM " + strTableName + "                                                  								\n";
	strSqData2 += "WHERE 1=1                              																		\n";
	for(var idx = 0; idx < nRowCnt; idx++)
    {
		 strColName		= this.DS_Detail.getColumn(idx, "columnName");
		 strColPk 		= this.DS_Detail.getColumn(idx, "colPk");
		 strColComent 	= this.DS_Detail.getColumn(idx, "comments");
		 if( this.gfn_trim(strColPk).length > 0)
		 {
			strSqData2 +="AND " + strColName + " = '' --".padLeft((15-strColName.length)," ") + this.fn_strColName(strColName.toLowerCase()) + "--".padLeft((15-strColName.length)," ") + strColComent + "        					\n";	
		 }
	}
    strSqData2 += ";";
    
    this.tbMain.tbSub8.taXOracle.set_value(strXOracle + "\n\n" + strTabspace + "\n\n" + strComent + "\n\n" + strTabIndex + "\n\n" 
								   + " /* ---------------(" + strTableName + ")테이블 조회 쿼리 입니다. ----------------------- */ \n\n" 
								   + strSqData + "\n\n"
								   + " /* ---------------(" + strTableName + ")테이블 입력 쿼리 입니다. ----------------------- */ \n\n" 
								   + strSqData1 + "\n\n"
								   + " /* ---------------(" + strTableName + ")테이블 수정 쿼리 입니다. ----------------------- */ \n\n" 
								   + strSqData3 + "\n\n"
								   + " /* ---------------(" + strTableName + ")테이블 삭제 쿼리 입니다. ----------------------- */ \n\n" 
								   + strSqData2 + "\n\n");
}


this.fn_PidXml = function()
{
	var strPidxml = "";
    var strValModel = (this.edPath00.text).trim();
	var strPath =  (this.edPath.text).trim();
	var strWork =  (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var RstrWork =  strValModel + "/retrieve" + (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var SstrWork =  strValModel + "/save" + (this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var DstrWork =  strValModel + "/delete" +(this.edWorkName.text).trim() + (this.edWorkName1.text).trim();
	var fullPath = strPath + ".vo." + strWork + "VO"; 
	
	
	this.tbMain.tbSub9.taPID.set_value("");
	var objDate = new Date();
	var nYear   = objDate.getFullYear();
	var nMonth  = objDate.getMonth()+1;
	var nDay 	= objDate.getDate();

	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "* FormID(화면   ID명): SingleTamplate.xfdl(싱클처리 템풀릿 단일처리)                                                                                                                                                                           \n";
	strPidxml += "* 작 성			일 명: jiback                                                                                                                                                                                                        \n";
	strPidxml += "* 작 성	    	일 자: "+ nYear + "/" +nMonth + "/" + nDay + "                                                                                                                                                                                                            \n";
	strPidxml += "* 변 경     	일 자:                                                                                                                                                                                                                       \n";
	strPidxml += "* 변 경			자 명:                                                                                                                                                                                                               \n";
	strPidxml += "* 변경 및 수정 로그 : 일자별로 변경자 및 변경사항을 간략히 기술                                                                                                                                                                                \n";
	strPidxml += "*/                                                                                                                                                                                                                                             \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	01. 전처리 공통 함수 선언                                                                                                                                                                                                                    \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	02. 폼 변수 정의                                                                                                                                                                                                                             \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	03. 폼 로드 및 닫을때(폼이 포커스 갈때)                                                                                                                                                                                                      \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 폼 로드 완료후 초기값 Setting                                                                                                                                                                                                        \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.form_onload = function(obj:Form, e:nexacro.InitEventInfo)                                                                                                                                                                                 \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	this.fn_commCode();	                                                                                                                                                                                                                     \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 폼언 로드(닫기전 셋팅)  Setting                                                                                                                                                                                                      \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.form_onclose = function(obj:Form, e:nexacro.CloseEventInfo)                                                                                                                                                                               \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	04. 공통 코드 및 콤보 데이타 조회                                                                                                                                                                                                            \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "this.fn_commCode = function()                                                                                                                                                                                                                  \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	var CommCodeParam =	[                                                                                                                                                                                                                    \n";
	strPidxml += "		{cType : " + "\"" + "01" + "\"" + ", cId : " + "\"" + "CM0001" + "\"" + ",  objId : " + "\"" + "ds_bank" + "\"" + ",  selectType : " + "\"" + "A" + "\"" + ", 	useYn: " + "\"" + "" + "\"" + "},		// 은행      \n";
	strPidxml += "		{cType : " + "\"" + "02" + "\"" + ", cId : " + "\"" + "" + "\"" + ",  		objId : " + "\"" + "ds_gu" + "\"" + ",    selectType : " + "\"" + "" + "\"" + ", 	useYn: " + "\"" + "" + "\"" + "},                            \n";
	strPidxml += "		{cType : " + "\"" + "03" + "\"" + ", cId : " + "\"" + "" + "\"" + ",  		objId : " + "\"" + "ds_sarye" + "\"" + ", selectType : " + "\"" + "" + "\"" + ", 	useYn: " + "\"" + "" + "\"" + "},                            \n";
	strPidxml += "		{cType : " + "\"" + "04" + "\"" + ", cId : " + "\"" + "" + "\"" + ",  		objId : " + "\"" + "ds_goods" + "\"" + ", selectType : " + "\"" + "" + "\"" + ", 	useYn: " + "\"" + "" + "\"" + "}                             \n";
	strPidxml += "	];                                                                                                                                                                                                                                           \n";
	strPidxml += "							                                                                                                                                                                                             \n";
	strPidxml += "	this.gfn_setInitForm(this, CommCodeParam);			                                                                                                                                                                             \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 공통코드 및 기본코드 후처리                                                                                                                                                                                                          \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.fn_afterOnload = function()                                                                                                                                                                                                               \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	//첫번째행을 셋팅 한다.                                                                                                                                                                                                                      \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "	/* 콤보박스를 자동으로 셋팅한다.                                                                                                                                                                                                             \n";
	strPidxml += "	this.div_search.cmb_regProd.set_index(0);                                                                                                                                                                                                    \n";
	strPidxml += "	this.div_search.cmb_tranRst.set_index(0);                                                                                                                                                                                                    \n";
	strPidxml += "	this.div_search.cmb_rsrvmeny.set_index(0);                                                                                                                                                                                                   \n";
	strPidxml += "	this.div_search.cmb_add.set_index(0);                                                                                                                                                                                                        \n";
	strPidxml += "	*/                                                                                                                                                                                                                                           \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "	this.div_search.btSearch.click();                                                                                                                                                                                                            \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 콜백함수(후처리)                                                                                                                                                                                                                     \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.fn_callBack = function(sSvcId,nErrorCode, sErrorMsg)                                                                                                                                                                                      \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	if(nErrorCode != 0)                                                                                                                                                                                                                          \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		trace(sErrorMsg);                                                                                                                                                                                                                    \n";
	strPidxml += "		this.alert(sErrorMsg);                                                                                                                                                                                                               \n";
	strPidxml += "		return false;                                                                                                                                                                                                                        \n";
	strPidxml += "	}else                                                                                                                                                                                                                                        \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		/*sSvcId (Transaction Id)*/                                                                                                                                                                                                          \n";
	strPidxml += "		switch(sSvcId)                                                                                                                                                                                                                       \n";
	strPidxml += "		{                                                                                                                                                                                                                                    \n";
	strPidxml += "			case " + "\"" + "Search" + "\"" + ":                                                                                                                                                                                         \n";
	strPidxml += "			    this.postSearch();                                                                                                                                                                                                       \n";
	strPidxml += "			  	break;                                                                                                                                                                                                               \n";
	strPidxml += "			case " + "\"" + "Save" + "\"" + ":                                                                                                                                                                                           \n";
	strPidxml += "			    this.postSave();                                                                                                                                                                                                         \n";
	strPidxml += "				break;                                                                                                                                                                                                               \n";
	strPidxml += "			case " + "\"" + "Insert" + "\"" + ":                                                                                                                                                                                         \n";
	strPidxml += "				this.postInsert();                                                                                                                                                                                                   \n";
	strPidxml += "				break;                                                                                                                                                                                                               \n";
	strPidxml += "			case " + "\"" + "Delete" + "\"" + ":                                                                                                                                                                                         \n";
	strPidxml += "				this.postDelete();                                                                                                                                                                                                   \n";
	strPidxml += "				break;                                                                                                                                                                                                               \n";
	strPidxml += "			default:                                                                                                                                                                                                                     \n";
	strPidxml += "				break;                                                                                                                                                                                                               \n";
	strPidxml += "		}                                                                                                                                                                                                                                    \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	05. 조회 함수 선언(마스터 함수)                                                                                                                                                                                                              \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 조회 전 실행                                                                                                                                                                                                                         \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.preSearch = function()                                                                                                                                                                                                                    \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	// 조회조건 셋팅                                                                                                                                                                                                                             \n";
	strPidxml += "	return true;                                                                                                                                                                                                                                 \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 마스터 조회 실행                                                                                                                                                                                                                     \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.btSearch_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)                                                                                                                                                                        \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	if(!this.preSearch())                                                                                                                                                                                                                        \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		return false;                                                                                                                                                                                                                        \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "	var sSvcID   	  = " + "\"" + "Search" + "\"" + ";  			                                                                                                                                                                     \n";
	strPidxml += "	var sUrl     	  = " + "\"" +  RstrWork + "\"" + "; 	                                                                                                                                                                     \n";
	strPidxml += "	var sInDataset    = " + "\"" + "ds_input=ds_input" + "\"" + ";	                                                                                                                                                                             \n";
	strPidxml += "	var sOutDataset   = " + "\"" + "ds_list=ds_list" + "\"" + ";                                                                                                                                                                                 \n";
	strPidxml += "	var sArg	      = " + "\"" + "ds_input=" + fullPath + "\"" + " + " + "\"" + " " + "\"" + ";                                                                                                                     \n";
	strPidxml += "		sArg         += " + "\"" + "ds_list=" + fullPath  + "\"" + "; 	                                                                                                                                             \n";
	strPidxml += "	var sParam	      = " + "\"" + "" + "\"" + ";		                                                                                                                                                                             \n";
	strPidxml += "	var sCallbackFunc = " + "\"" + "fn_callBack" + "\"" + ";                                                                                                                                                                                     \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	this.gfn_callTran(sSvcID                                                                                                                                                                                                                     \n";
	strPidxml += "					 , sUrl                                                                                                                                                                                                      \n";
	strPidxml += "					 , sInDataset                                                                                                                                                                                                \n";
	strPidxml += "					 , sOutDataset                                                                                                                                                                                               \n";
	strPidxml += "					 , sArg                                                                                                                                                                                                      \n";
	strPidxml += "					 , sParam                                                                                                                                                                                                    \n";
	strPidxml += "					 , sCallbackFunc);						                                                                                                                                             \n";
	strPidxml += "		                                                                                                                                                                                                                                     \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 조회 후 실행                                                                                                                                                                                                                         \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.postSearch = function()                                                                                                                                                                                                                   \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	//trace(this.ds_list.saveXML());	                                                                                                                                                                                                     \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	06. 추가 함수 선언                                                                                                                                                                                                                           \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 추가 전 실행(기본체크사항)                                                                                                                                                                                                           \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.preInsert = function()                                                                                                                                                                                                                    \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	return true;                                                                                                                                                                                                                                 \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 마스터 추가 실행                                                                                                                                                                                                                     \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.btInsert_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)                                                                                                                                                                        \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	if(!this.preInsert())                                                                                                                                                                                                                        \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		return false;                                                                                                                                                                                                                        \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "	var nRow=-1;                                                                                                                                                                                                                                 \n";
	strPidxml += "	//신규로을 추가 할때 사용                                                                                                                                                                                                                    \n";
	strPidxml += "	nRow = this.ds_list.addRow();                                                                                                                                                                                                                \n";
	strPidxml += "	//기본값셋팅                                                                                                                                                                                                                                 \n";
	strPidxml += "	this.ds_list.setColumn(nRow," + "\"" + "chk" + "\"" + ", 	" + "\"" + "1" + "\"" + "); 		//사용유무                                                                                                                           \n";
	strPidxml += "	//this.ds_list.setColumn(nRow," + "\"" + "chk" + "\"" + ", 	" + "\"" + "1" + "\"" + "); 	//추가시 기본값을 셋팅                                                                                                                       \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "	//후처러 적용                                                                                                                                                                                                                                \n";
	strPidxml += "	this.postInsert();                                                                                                                                                                                                                           \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 처리 후 실행                                                                                                                                                                                                                         \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.postInsert = function()                                                                                                                                                                                                                   \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	07. 삭제 함수 선언                                                                                                                                                                                                                           \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 삭제 버튼 실행                                                                                                                                                                                                                       \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.preDelete = function()                                                                                                                                                                                                                    \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	if(this.ds_list.rowcount < 1 || this.ds_list.findRow(" + "\"" + "chk" + "\"" + ",1) == -1)                                                                                                                                                   \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		this.alert(" + "\"" + "삭제할 데이타가 없습니다.!" + "\"" + ", " + "\"" + "삭제 정보" + "\"" + " ," + "\"" + "warning" + "\"" + ");                                                                                                  \n";
	strPidxml += "		return false;                                                                                                                                                                                                                        \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "	var result = this.confirm( " + "\"" + "현재선택행을 삭제하시겠습니까?" + "\"" + ", " + "\"" + "삭제" + "\"" + ", " + "\"" + "question" + "\"" + " );                                                                                         \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	if(result == 0)                                                                                                                                                                                                                              \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "	   return false;                                                                                                                                                                                                                             \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "	//싱글 삭제시 사용                                                                                                                                                                                                                           \n";
	strPidxml += "	//this.ds_list.deleteRow(this.ds_list.rowposition);                                                                                                                                                                                          \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "	//다중삭제 용도                                                                                                                                                                                                                              \n";
	strPidxml += "	this.ds_list.set_enableevent(false);                                                                                                                                                                                                         \n";
	strPidxml += "	for(var i=this.ds_list.rowcount-1;i>-1;i--)                                                                                                                                                                                                  \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		if(this.ds_list.getColumn(i," + "\"" + "chk" + "\"" + ") == " + "\"" + "1" + "\"" + " || this.ds_list.getRowType(i) == 2)                                                                                                            \n";
	strPidxml += "		{                                                                                                                                                                                                                                    \n";
	strPidxml += "			this.ds_list.deleteRow(i);                                                                                                                                                                                                   \n";
	strPidxml += "		}                                                                                                                                                                                                                                    \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "	this.ds_list.set_enableevent(true);                                                                                                                                                                                                          \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "	//개별삭제시                                                                                                                                                                                                                                 \n";
	strPidxml += "	return true;                                                                                                                                                                                                                                 \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : Row 삭제 또는 Transaction 삭제 처리                                                                                                                                                                                                  \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.btDelete_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)                                                                                                                                                                        \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	if(!this.preDelete())                                                                                                                                                                                                                        \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		return false;                                                                                                                                                                                                                        \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	var sSvcID   	  = " + "\"" + "Delete" + "\"" + ";  			                                                                                                                                                                     \n";
	strPidxml += "	var sUrl     	  = " + "\"" +  DstrWork + "\"" + "; 	                                                                                                                                                                     \n";
	strPidxml += "	var sInDataset    = " + "\"" + "ds_list=ds_list:U" + "\"" + ";	                                                                                                                                                                             \n";
	strPidxml += "	var sOutDataset   = " + "\"" + "" + "\"" + ";                                                                                                                                                                                                \n";
	strPidxml += "	var sArg	      = " + "\"" + "ds_list=" + fullPath  + "\"" + ";                                                                                                                                                  \n";
	strPidxml += "	var sParam	      = " + "\"" + "" + "\"" + ";		                                                                                                                                                                             \n";
	strPidxml += "	var sCallbackFunc = " + "\"" + "fn_callBack" + "\"" + ";                                                                                                                                                                                     \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	this.gfn_callTran(sSvcID                                                                                                                                                                                                                     \n";
	strPidxml += "					 , sUrl                                                                                                                                                                                                      \n";
	strPidxml += "					 , sInDataset                                                                                                                                                                                                \n";
	strPidxml += "					 , sOutDataset                                                                                                                                                                                               \n";
	strPidxml += "					 , sArg                                                                                                                                                                                                      \n";
	strPidxml += "					 , sParam                                                                                                                                                                                                    \n";
	strPidxml += "					 , sCallbackFunc);					   		                                                                                                                                     \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "this.postDelete = function()                                                                                                                                                                                                                   \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	08. 저장 함수 선언                                                                                                                                                                                                                           \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 저장 전 실행                                                                                                                                                                                                                         \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.preSave = function()                                                                                                                                                                                                                      \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "    if(!this.gfn_dsIsUpdated(this.ds_list))                                                                                                                                                                                                    \n";
	strPidxml += "    {                                                                                                                                                                                                                                          \n";
	strPidxml += "        this.alert(" + "\"" + "변경된 이력이 없습니다." + "\"" + "," + "\"" + "저장" + "\"" + "," + "\"" + "question" + "\"" + ");                                                                                                             \n";
	strPidxml += "        return false;                                                                                                                                                                                                                          \n";
	strPidxml += "    }                                                                                                                                                                                                                                          \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "    var result = this.confirm( " + "\"" + "저장 하시겠습니까?" + "\"" + ", " + "\"" + "저장" + "\"" + ", " + "\"" + "question" + "\"" + " );                                                                                                   \n";
	strPidxml += "	  if(result == 0)                                                                                                                                                                                                                            \n";
	strPidxml += "	  {                                                                                                                                                                                                                                          \n";
	strPidxml += "	     return false;                                                                                                                                                                                                                           \n";
	strPidxml += "	  }                                                                                                                                                                                                                                          \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	return true;                                                                                                                                                                                                                                 \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 저장 실행                                                                                                                                                                                                                            \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.btSave_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)                                                                                                                                                                          \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	if(!this.preSave())                                                                                                                                                                                                                          \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		return false;                                                                                                                                                                                                                        \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "			   		                                                                                                                                                                                                             \n";
	strPidxml += "	var sSvcID   	  = " + "\"" + "Save" + "\"" + ";  			                                                                                                                                                                     \n";
	strPidxml += "	var sUrl     	  = " + "\"" +  SstrWork + "\"" + "; 	                                                                                                                                                                     \n";
	strPidxml += "	var sInDataset    = " + "\"" + "ds_input=ds_input:A ds_list=ds_list:U" + "\"" + ";	                                                                                                                                                     \n";
	strPidxml += "	var sOutDataset   = " + "\"" + "ds_list=ds_list" + "\"" + ";                                                                                                                                                                                 \n";
	strPidxml += "	var sArg	      = " + "\"" + "ds_input=" + fullPath + "\"" + " + " + "\"" + " " + "\"" + ";                                                                                                                     \n";
	strPidxml += "	    sArg	     += " + "\"" + "ds_list=" + fullPath  + "\"" + " + " + "\"" + " " + "\"" + ";                                                                                                                      \n";
	strPidxml += "	    sArg         += " + "\"" + "ds_list=" + fullPath  + "\"" + ";                                                                                                                                                      \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "	var sParam	      = " + "\"" + "" + "\"" + ";		                                                                                                                                                                             \n";
	strPidxml += "	var sCallbackFunc = " + "\"" + "fn_callBack" + "\"" + ";                                                                                                                                                                                     \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	this.gfn_callTran(sSvcID                                                                                                                                                                                                                     \n";
	strPidxml += "					 , sUrl                                                                                                                                                                                                      \n";
	strPidxml += "					 , sInDataset                                                                                                                                                                                                \n";
	strPidxml += "					 , sOutDataset                                                                                                                                                                                               \n";
	strPidxml += "					 , sArg                                                                                                                                                                                                      \n";
	strPidxml += "					 , sParam                                                                                                                                                                                                    \n";
	strPidxml += "					 , sCallbackFunc);				   		                                                                                                                                             \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " *	기능 : 저장시 후처리                                                                                                                                                                                                                 \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.postSave = function()                                                                                                                                                                                                                     \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	                                                                                                                                                                                                                                             \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	09. 초기화                                                                                                                                                                                                                                   \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	10. 출력 함수 선언                                                                                                                                                                                                                           \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	11. ExcelDnwn 엑셀로 출력                                                                                                                                                                                                                    \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "this.btExcelDn_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)                                                                                                                                                                       \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	if(this.ds_list.rowcount < 1)                                                                                                                                                                                                                \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		this.alert(" + "\"" + "출력할 엑셀데이타가 없습니다.!" + "\"" + ", " + "\"" + "EXCEL 정보" + "\"" + " ," + "\"" + "information" + "\"" + ");                                                                                         \n";
	strPidxml += "		return false;                                                                                                                                                                                                                        \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	var result = this.confirm( " + "\"" + "Excel를 출력하시겠습니까?" + "\"" + ", " + "\"" + "EXCEL 출력" + "\"" + ", " + "\"" + "question" + "\"" + " );                                                                                        \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	if(result == 0)                                                                                                                                                                                                                              \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "	   return false;                                                                                                                                                                                                                             \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	this.gfn_excelExport(this.gdMaster);                                                                                                                                                                                                         \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	12. ExcelUpLoad 신규저장시                                                                                                                                                                                                                   \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += " * 기능 : 삭제 버튼 실행                                                                                                                                                                                                                       \n";
	strPidxml += " */                                                                                                                                                                                                                                            \n";
	strPidxml += "this.preExcelUp = function()                                                                                                                                                                                                                   \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	var result = this.confirm( " + "\"" + "기존데이타를 삭제하고 신규데이타를 일괄적용하겠습니까?" + "\"" + ", " + "\"" + "EXCEL 저장" + "\"" + ", " + "\"" + "question" + "\"" + " );                                                           \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	if(result == 0)                                                                                                                                                                                                                              \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "	   return false;                                                                                                                                                                                                                             \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	//개별삭제시                                                                                                                                                                                                                                 \n";
	strPidxml += "	return true;                                                                                                                                                                                                                                 \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "this.btExcelUp_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)                                                                                                                                                                       \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	if(!this.preExcelUp())                                                                                                                                                                                                                       \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		return false;                                                                                                                                                                                                                        \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	13. Get, Set Method                                                                                                                                                                                                                          \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**********************************************************************                                                                                                                                                                        \n";
	strPidxml += "	14. 기타 Control Event                                                                                                                                                                                                                       \n";
	strPidxml += "***********************************************************************/                                                                                                                                                                       \n";
	strPidxml += "/**                                                                                                                                                                                                                                            \n";
	strPidxml += "	그리드멀티 소트정열                                                                                                                                                                                                                          \n";
	strPidxml += "*/                                                                                                                                                                                                                                             \n";
	strPidxml += "this.gdMaster_onheaddblclick = function(obj:Grid, e:nexacro.GridClickEventInfo)                                                                                                                                                                \n";
	strPidxml += "{                                                                                                                                                                                                                                              \n";
	strPidxml += "	if(e.cell != 0)                                                                                                                                                                                                                              \n";
	strPidxml += "	{                                                                                                                                                                                                                                            \n";
	strPidxml += "		this.gfn_gridSort(obj,e);                                                                                                                                                                                                            \n";
	strPidxml += "                                                                                                                                                                                                                                               \n";
	strPidxml += "	}                                                                                                                                                                                                                                            \n";
	strPidxml += "}                                                                                                                                                                                                                                              \n";
	
	
	this.tbMain.tbSub9.taPID.set_value(strPidxml);
}



/**
* Devon RetrieveCmd Create()
* 조회 Service 자동생성기 
*/
this.fn_taVo = function()
{
	var strVo 			= "";
	var nRowCnt 		= this.DS_Detail.rowcount;
	var strGroup    	= this.gfn_trim(this.edWorkName.text);
	var strMethod		= this.gfn_trim(this.edWorkName1.text);
	var strWork 		= this.gfn_trim(this.edWorkName.text) + this.gfn_trim(this.edWorkName1.text);
	var strXpName   	= "";
		
	strXpName      		=  strWork + "VO";
	//strXpName      		=  this.fn_xmlFile2(this.fn_strColName(this.DS_Master.getColumn(this.DS_Master.rowposition,"tableName").toLowerCase()))+ "VO";
	
	var strPath     	= this.gfn_trim(this.edPath.text);
	var strMetaData 	= "";
	var strColName  	= "";
	var strColPk    	= "";
	var strDataLength 	= "";
	var	strColType    	= "";
	var strColComent	= "";
	var strTableNm      = this.DS_Master.getColumn(this.DS_Master.rowposition,"tableName");
	var strDesc			= this.DS_Master.getColumn(this.DS_Master.rowposition,"comments");
	
	strVo += "/*------------------------------------------------------------------------------  \n";
	strVo += " * NAME : " + strXpName + ".java                                                  \n";
	strVo += " * DESC :                                                                         \n";
	strVo += " * VER  : V1.0                                                                    \n";
	strVo += " * PROJ : 자산형성지원 정보화 구축                                             \n";
	strVo += " * Copyright 2017 Ready Korea All rights reserved                                 \n";
	strVo += " *------------------------------------------------------------------------------  \n";
	strVo += " *                               MODIFICATION LOG                                 \n";
	strVo += " *------------------------------------------------------------------------------  \n";
	strVo += " *    DATE     AUTHOR                      DESCRIPTION                            \n";
	strVo += " * ----------  ------  ---------------------------------------------------------  \n";
	strVo += " * 2017/10/11  jiback(이름)                                                       \n";
	strVo += " *------------------------------------------------------------------------------*/\n";
	strVo += "package " + strPath + ".vo;                                                  \n";
	strVo += "                                                                                  \n";
	strVo += "import java.sql.Date;                                                              \n";
	strVo += "import java.math.BigDecimal;                                                      \n";
	strVo += "                                                                                  \n";
	strVo += "import lombok.Data;                                                               \n";
	strVo += "import lombok.ToString;                                                           \n";
	strVo += "                                                                                  \n";
	strVo += "import org.apache.ibatis.type.Alias;                                              \n";
	strVo += "                                                                                  \n";
	strVo += "import kr.or.cssf.bass.comm.vo.DefaultVO;                                           \n";
	strVo += "                                                                                  \n";
	strVo += "@Alias( " + "\"" + strXpName + "\"" + " )                                     \n";
	strVo += "@Data                                                                             \n";
	strVo += "@ToString( callSuper = true )                                                     \n";
	strVo += "public class " + strXpName + " extends DefaultVO {                                \n";
	strVo += "                                                                                  \n";
	strVo += "\t/** 컬럼체크 **/\n";
	strVo += "\t"	+  "private " + "String" + " " + "chk" + ";\n";
	
	for (var idx = 0; idx < nRowCnt; idx++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColComent 	= this.DS_Detail.getColumn(idx, "comments");

		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));

		var strDsType;
		switch(strColType)
        {
            case "VARCHAR2":
            case "VARCHAR":
            case "CHAR":
				strDsType = "String";
				break;
            case "DATE":
				strDsType = "String";
				break;
            case "DECIMAL":
            case "NUMBER":
				strDsType = "BigDecimal";
				break;
            case "INTEGER":
				strDsType = "int";
				break;
            case "BLOB":
                strDsType = "Blob";
                break;
            default:
                strDsType = "String";
                break;
        }
     
		strVo += "\n";
		strVo += "\t/** " + strColComent + " **/\n";
		strVo += "\t"	+  "private " + strDsType + " " + this.fn_strColName(strColName.toLowerCase()) + ";\n";
	}
	strVo += "\n";
	
	for (var idx = 0; idx < nRowCnt; idx ++)
    {
		strColName   	= this.DS_Detail.getColumn(idx, "columnName");
		strColComent 	= this.DS_Detail.getColumn(idx, "comments");

		strColType   	= this.gfn_trim(this.DS_Detail.getColumn(idx, "dataType"));

		var strDsType;
		switch(strColType)
        {
            case "VARCHAR2":
            case "VARCHAR":
            case "CHAR":
				strDsType = "String";
				break;
            case "DATE":
				strDsType = "Date";
				break;
            case "DECIMAL":
            case "NUMBER":
				strDsType = "BigDecimal";
				break;
            case "INTEGER":
				strDsType = "int";
				break;
            case "BLOB":
                strDsType = "Blob";
                break;
            default:
                strDsType = "String";
                break;
        }
		strVo += "\n";
		
		var strGetName = this.fn_strColName(strColName.toLowerCase());
		
		strVo += "\t"	+  "public " + strDsType + " get" + strGetName.substr(0,1).toUpperCase() + strGetName.substr(1) + "() {\n";
		strVo += "\t  return " + strGetName + ";\n";
		strVo += "\t}\n";
		strVo += "\n";
		strVo += "\t"	+  "public void set" + strGetName.substr(0,1).toUpperCase() + strGetName.substr(1) + "(" + strDsType + " " + strGetName + ") {\n";
		strVo += "\t  this." + strGetName + " = " + strGetName + ";\n";
		strVo += "\t}\n";
	}
	
	strVo += "\n";
	strVo += "}\n";
	this.tbMain.tbSub10.taVo.set_value(strVo);
	
}

/**
* 첫자 대문자 만들기 
*/
this.fn_xmlFile2 = function(FileName)
{
	var strXmlFile ="";
	strXmlFile = (FileName.substr(0,1)).toUpperCase() + FileName.substr(1);
	
	return strXmlFile;
}

// 
// 
// /*
// this.Button00_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
// {
// 	var obj = Base.XPComp.query(this, "", "");
// 	
// 	for(var i=0; i<obj.length; i++)
// 	{ 
// 	   trace(obj[i]);
// 	   trace(obj[i].name);
// 	   
// 	   trace(Base.XPComp.getXpName(obj[i],this));
// 	}
// }
// */

this.cbUsers_onitemchanged = function(obj:Combo, e:nexacro.ItemChangeEventInfo)
{
	this.Search_onclick(this.Search);
}
this.cbUsers00_onitemchanged = function(obj:Combo, e:nexacro.ItemChangeEventInfo)
{
	this.ds2Depth.filter("LEVEL == '" + this.cbUsers00.value + "'");
	this.cbUsers01.set_index(0);
	this.edPath00.set_text(this.cbUsers01.value);
	this.edPath.set_value("kr.or.cssf.bass" + "." +  this.cbUsers01.value);
}
this.cbUsers01_onitemchanged = function(obj:Combo, e:nexacro.ItemChangeEventInfo)
{
	this.edPath.set_value("kr.or.cssf.bass" + "." +  this.cbUsers01.value);
	this.edPath00.set_value(this.cbUsers01.value);
	
	this.fn_costText();
	
	this.postDSearch();
	
}

this.edPath00_onchar = function(obj:Edit,  e:nexacro.CharEventInfo)
{
	this.edPath.set_value(this.cbUsers00.value+ "." + this.cbUsers01.value + "." + e.posttext);
}


this.edRetrieve00_onkeydown = function(obj:Edit, e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13)
	{
		this.Search.setFocus();
		this.Search_onclick();
	}
}

this.btExcel_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.gfn_excelExport(this.tbMain.tbSub1.gd_Detail);
	
}

/**
  * 닫을시 사용자가 변경유무를 체크(공통처리)
 **/
this.fn_beforeclose = function()
{
   // return (this.gfn_isUpdate(this.dsMaster) || this.gfn_isUpdate(this.dsDetail1) || this.gfn_isUpdate(this.dsDetail2));
};


]]></Script>
  </Form>
</FDL>
